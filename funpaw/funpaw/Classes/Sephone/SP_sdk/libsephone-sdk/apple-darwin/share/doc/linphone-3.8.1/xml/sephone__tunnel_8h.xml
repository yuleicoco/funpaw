<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="sephone__tunnel_8h" kind="file" language="C++">
    <compoundname>sephone_tunnel.h</compoundname>
    <includes refid="sephonecore_8h" local="yes">sephonecore.h</includes>
    <includedby refid="private_8h" local="yes">private.h</includedby>
    <includedby refid="sephone__tunnel__config_8c" local="yes">sephone_tunnel_config.c</includedby>
    <includedby refid="sephone__tunnel__stubs_8c" local="yes">sephone_tunnel_stubs.c</includedby>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__tunnel_1ga81d057dba88b0e9f8d8ddb18eccac653" prot="public" static="no">
        <name>_SephoneTunnelMode</name>
        <enumvalue id="group__tunnel_1gga81d057dba88b0e9f8d8ddb18eccac653a323e7ec408e226d0f24f76032043be43" prot="public">
          <name>SephoneTunnelModeDisable</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The tunnel is disabled. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tunnel_1gga81d057dba88b0e9f8d8ddb18eccac653a787a89b81d238908848711e6088625e2" prot="public">
          <name>SephoneTunnelModeEnable</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The tunnel is enabled. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__tunnel_1gga81d057dba88b0e9f8d8ddb18eccac653abe55bd5683035b2f0149133dcb9f23fb" prot="public">
          <name>SephoneTunnelModeAuto</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The tunnel is enabled automatically if it is required. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enum describing the tunnel modes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="95" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" bodystart="95" bodyend="99"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" prot="public" static="no">
        <type>struct _SephoneTunnelConfig</type>
        <definition>typedef struct _SephoneTunnelConfig SephoneTunnelConfig</definition>
        <argsstring></argsstring>
        <name>SephoneTunnelConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sephone tunnel aims is to bypass IP traffic blocking due to aggressive firewalls which typically only authorize TCP traffic with destination port 443. <linebreak/>
 Its principle is tunneling all SIP and/or RTP traffic through a single secure https connection up to a detunnelizer server. <linebreak/>
 This set of methods enhance SephoneCore functionalities in order to provide an easy to use API to <itemizedlist>
<listitem><para>provision tunnel servers IP addresses and ports. This functionality is an option not implemented under GPL. Availability can be check at runtime using function <ref refid="group__tunnel_1ga57d5ccbe987c853673f1b7ecf618c07e" kindref="member">sephone_core_tunnel_available</ref> </para></listitem>
<listitem><para>start/stop the tunneling service </para></listitem>
<listitem><para>perform auto-detection whether tunneling is required, based on a test of sending/receiving a flow of UDP packets.</para></listitem>
</itemizedlist>
It takes in charge automatically the SIP registration procedure when connecting or disconnecting to a tunnel server. No other action on SephoneCore is required to enable full operation in tunnel mode.</para><para><linebreak/>
 Provision is done using object <ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref> created by function <ref refid="group__tunnel_1ga9b0b69201d76d8c0895ea1e15525ff55" kindref="member">sephone_tunnel_config_new()</ref>. Functions <ref refid="group__tunnel_1gace057ce79d6bd608463a6612aa85dc04" kindref="member">sephone_tunnel_config_set_host</ref> and <ref refid="group__tunnel_1ga88852f7d61c44bff65cc4ff8dce62bca" kindref="member">sephone_tunnel_config_set_port</ref> allow to point to tunnel server IP/port. Once set, use function <ref refid="group__tunnel_1ga0512e17112893797de9f847aa327df89" kindref="member">sephone_tunnel_add_server</ref> to provision a tunnel server. <linebreak/>
 Finally tunnel mode configuration is achieved by function <ref refid="group__tunnel_1gaeab232e3b55cb63ca66771b7029d7047" kindref="member">sephone_tunnel_set_mode</ref>. <linebreak/>
 Tunnel connection status can be checked using function <ref refid="group__tunnel_1ga4b4bbc50c92cd543bf1a26e3dbbcddc9" kindref="member">sephone_tunnel_connected</ref>.</para><para>Bellow pseudo code that can be use to configure, enable, check state and disable tunnel functionality:</para><para><programlisting><codeline><highlight class="normal">SephoneTunnel<sp/>*tunnel<sp/>=<sp/>sephone_core_get_tunnel(sephone_core);</highlight></codeline>
<codeline><highlight class="normal">SephoneTunnelConfig<sp/>*config=sephone_tunnel_config_new();<sp/>//instantiate<sp/>tunnel<sp/>configuration</highlight></codeline>
<codeline><highlight class="normal">sephone_tunnel_config_set_host(config,<sp/>&quot;tunnel.linphone.org&quot;);<sp/>//set<sp/>tunnel<sp/>server<sp/>host<sp/>address</highlight></codeline>
<codeline><highlight class="normal">sephone_tunnel_config_set_port(config,<sp/>443);<sp/>//set<sp/>tunnel<sp/>server<sp/>port</highlight></codeline>
<codeline><highlight class="normal">sephone_tunnel_add_server(tunnel,<sp/>config);<sp/>//provision<sp/>tunnel<sp/>config</highlight></codeline>
<codeline><highlight class="normal">sephone_tunnel_set_mode(tunnel,<sp/>SephoneTunnelModeEnable);<sp/>//activate<sp/>the<sp/>tunnel<sp/>unconditional</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">while<sp/>(!sephone_tunnel_connected(tunnel))<sp/>{<sp/>//wait<sp/>for<sp/>tunnel<sp/>to<sp/>be<sp/>ready</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sephone_core_iterate(sephone_core);<sp/>//schedule<sp/>core<sp/>main<sp/>loop</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ms_sleep(100);<sp/>//wait<sp/>100ms</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">SephoneCall<sp/>*call<sp/>=<sp/>sephone_core_invite(sephone_core,&quot;sip:foo@example.org&quot;);<sp/>//place<sp/>an<sp/>outgoing<sp/>call</highlight></codeline>
<codeline><highlight class="normal">sephone_call_ref(call);<sp/>//acquire<sp/>a<sp/>reference<sp/>on<sp/>the<sp/>call<sp/>to<sp/>avoid<sp/>deletion<sp/>after<sp/>completion</highlight></codeline>
<codeline><highlight class="normal">//...</highlight></codeline>
<codeline><highlight class="normal">sephone_core_terminate_call(sephone_core,call);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">while<sp/>(sephone_call_get_state(call)<sp/>!=<sp/>SephoneCallReleased)<sp/>{<sp/>//wait<sp/>for<sp/>call<sp/>to<sp/>be<sp/>in<sp/>release<sp/>state</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sephone_core_iterate(sephone_core);<sp/>//schedule<sp/>core<sp/>main<sp/>loop</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ms_sleep(100);<sp/>//wait<sp/>100ms</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">sephone_tunnel_set_mode(tunnel,<sp/>SephoneTunnelModeDisable);<sp/>//deactivate<sp/>tunnel</highlight></codeline>
<codeline><highlight class="normal">sephone_call_unref(call);<sp/>//release<sp/>reference<sp/>on<sp/>the<sp/>call</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="763" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__tunnel_1ga892e60039180fb5f0c4b11bd247eb23e" prot="public" static="no">
        <type>enum <ref refid="group__tunnel_1ga81d057dba88b0e9f8d8ddb18eccac653" kindref="member">_SephoneTunnelMode</ref></type>
        <definition>typedef enum _SephoneTunnelMode  SephoneTunnelMode</definition>
        <argsstring></argsstring>
        <name>SephoneTunnelMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enum describing the tunnel modes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="99" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__tunnel_1ga14c4d4e2585a78222172cb2561e5128e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__tunnel_1ga892e60039180fb5f0c4b11bd247eb23e" kindref="member">SephoneTunnelMode</ref></type>
        <definition>SephoneTunnelMode sephone_tunnel_mode_from_string</definition>
        <argsstring>(const char *string)</argsstring>
        <name>sephone_tunnel_mode_from_string</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a string into SephoneTunnelMode enum <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>String to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An SephoneTunnelMode enum. If the passed string is NULL or does not match with any mode, the SephoneTunnelModeDisable is returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="107" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/misc.c" bodystart="2005" bodyend="2018"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1ga42987b8439023e8a5482cee54e3bd11a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sephone_tunnel_mode_to_string</definition>
        <argsstring>(SephoneTunnelMode mode)</argsstring>
        <name>sephone_tunnel_mode_to_string</name>
        <param>
          <type><ref refid="group__tunnel_1ga892e60039180fb5f0c4b11bd247eb23e" kindref="member">SephoneTunnelMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a tunnel mode enum into string <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Enum to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&quot;disable&quot;, &quot;enable&quot; or &quot;auto&quot; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="114" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/misc.c" bodystart="2020" bodyend="2030"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1ga9b0b69201d76d8c0895ea1e15525ff55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref> *</type>
        <definition>SephoneTunnelConfig* sephone_tunnel_config_new</definition>
        <argsstring>(void)</argsstring>
        <name>sephone_tunnel_config_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new tunnel configuration </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="119" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_config.c" bodystart="32" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1gace057ce79d6bd608463a6612aa85dc04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_tunnel_config_set_host</definition>
        <argsstring>(SephoneTunnelConfig *tunnel, const char *host)</argsstring>
        <name>sephone_tunnel_config_set_host</name>
        <param>
          <type><ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the IP address or hostname of the tunnel server. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnelConfig object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>The tunnel server IP address or hostname </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="126" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_config.c" bodystart="39" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1ga4cf028ef591c5387de4276b1e0c19b20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sephone_tunnel_config_get_host</definition>
        <argsstring>(const SephoneTunnelConfig *tunnel)</argsstring>
        <name>sephone_tunnel_config_get_host</name>
        <param>
          <type>const <ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the IP address or hostname of the tunnel server. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnelConfig object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The tunnel server IP address or hostname </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="133" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_config.c" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1ga88852f7d61c44bff65cc4ff8dce62bca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_tunnel_config_set_port</definition>
        <argsstring>(SephoneTunnelConfig *tunnel, int port)</argsstring>
        <name>sephone_tunnel_config_set_port</name>
        <param>
          <type><ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set tls port of server. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnelConfig object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The tunnel server TLS port, recommended value is 443 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="140" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_config.c" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1ga71e19711ec24a7338c45277c6c79cd7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_tunnel_config_get_port</definition>
        <argsstring>(const SephoneTunnelConfig *tunnel)</argsstring>
        <name>sephone_tunnel_config_get_port</name>
        <param>
          <type>const <ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the TLS port of the tunnel server. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnelConfig object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TLS port of the tunnel server </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="147" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_config.c" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1ga105c4aa8bb49eb7fab50bcdf5bebb329" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_tunnel_config_set_remote_udp_mirror_port</definition>
        <argsstring>(SephoneTunnelConfig *tunnel, int remote_udp_mirror_port)</argsstring>
        <name>sephone_tunnel_config_set_remote_udp_mirror_port</name>
        <param>
          <type><ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>remote_udp_mirror_port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the remote port on the tunnel server side used to test UDP reachability. This is used when the mode is set auto, to detect whether the tunnel has to be enabled or not. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnelConfig object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>remote_udp_mirror_port</parametername>
</parameternamelist>
<parameterdescription>
<para>The remote port on the tunnel server side used to test UDP reachability, set to -1 to disable the feature </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="155" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_config.c" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1ga2012a7d503dbd3ad101ac7d05720ba9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_tunnel_config_get_remote_udp_mirror_port</definition>
        <argsstring>(const SephoneTunnelConfig *tunnel)</argsstring>
        <name>sephone_tunnel_config_get_remote_udp_mirror_port</name>
        <param>
          <type>const <ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the remote port on the tunnel server side used to test UDP reachability. This is used when the mode is set auto, to detect whether the tunnel has to be enabled or not. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnelConfig object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The remote port on the tunnel server side used to test UDP reachability </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="163" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_config.c" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1gaffe9af00f03d3b4138722090cefbc4eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_tunnel_config_set_delay</definition>
        <argsstring>(SephoneTunnelConfig *tunnel, int delay)</argsstring>
        <name>sephone_tunnel_config_set_delay</name>
        <param>
          <type><ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the UDP packet round trip delay in ms for a tunnel configuration. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnelConfig object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>The UDP packet round trip delay in ms considered as acceptable (recommended value is 1000 ms). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="170" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_config.c" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1ga6b64c8ee4709583219ea8453056d1589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_tunnel_config_get_delay</definition>
        <argsstring>(const SephoneTunnelConfig *tunnel)</argsstring>
        <name>sephone_tunnel_config_get_delay</name>
        <param>
          <type>const <ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the UDP packet round trip delay in ms for a tunnel configuration. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnelConfig object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The UDP packet round trip delay in ms. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="177" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_config.c" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1ga8499ad747f203089195427fe5fb0d1fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_tunnel_config_destroy</definition>
        <argsstring>(SephoneTunnelConfig *tunnel)</argsstring>
        <name>sephone_tunnel_config_destroy</name>
        <param>
          <type><ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a tunnel configuration <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnelConfig object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="183" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_config.c" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1ga0512e17112893797de9f847aa327df89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_tunnel_add_server</definition>
        <argsstring>(SephoneTunnel *tunnel, SephoneTunnelConfig *tunnel_config)</argsstring>
        <name>sephone_tunnel_add_server</name>
        <param>
          <type><ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <param>
          <type><ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref> *</type>
          <declname>tunnel_config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a tunnel server configuration. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnel object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tunnel_config</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnelConfig object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="190" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_stubs.c" bodystart="42" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1gacf28a19306108a285925b1fd623c1b5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_tunnel_remove_server</definition>
        <argsstring>(SephoneTunnel *tunnel, SephoneTunnelConfig *tunnel_config)</argsstring>
        <name>sephone_tunnel_remove_server</name>
        <param>
          <type><ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <param>
          <type><ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref> *</type>
          <declname>tunnel_config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove a tunnel server configuration. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnel object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tunnel_config</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnelConfig object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="197" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_stubs.c" bodystart="45" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1ga890e46b6483a74f5f924648c37ec52a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const MSList *</type>
        <definition>const MSList* sephone_tunnel_get_servers</definition>
        <argsstring>(const SephoneTunnel *tunnel)</argsstring>
        <name>sephone_tunnel_get_servers</name>
        <param>
          <type>const <ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get added servers <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnel object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of <ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref> objects. <mslist>SephoneTunnelConfig</mslist>  </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="204" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_stubs.c" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1gabccf93fe04f06dd240921525b9d152ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_tunnel_clean_servers</definition>
        <argsstring>(SephoneTunnel *tunnel)</argsstring>
        <name>sephone_tunnel_clean_servers</name>
        <param>
          <type><ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove all tunnel server addresses previously entered with <ref refid="group__tunnel_1ga0512e17112893797de9f847aa327df89" kindref="member">sephone_tunnel_add_server()</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnel object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="210" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_stubs.c" bodystart="52" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1gaeab232e3b55cb63ca66771b7029d7047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_tunnel_set_mode</definition>
        <argsstring>(SephoneTunnel *tunnel, SephoneTunnelMode mode)</argsstring>
        <name>sephone_tunnel_set_mode</name>
        <param>
          <type><ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <param>
          <type><ref refid="group__tunnel_1ga892e60039180fb5f0c4b11bd247eb23e" kindref="member">SephoneTunnelMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the tunnel mode. The tunnel mode can be &apos;enable&apos;, &apos;disable&apos; or &apos;auto&apos; If the mode is set to &apos;auto&apos;, the tunnel manager will try to established an RTP session with the tunnel server on the UdpMirrorPort. If the connection fail, the tunnel is automatically activated whereas the tunnel is automatically disabled if the connection succeed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnel object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired SephoneTunnelMode </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="221" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_stubs.c" bodystart="55" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1ga6ee1bc46587807822aa7280ba92506a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__tunnel_1ga892e60039180fb5f0c4b11bd247eb23e" kindref="member">SephoneTunnelMode</ref></type>
        <definition>SephoneTunnelMode sephone_tunnel_get_mode</definition>
        <argsstring>(const SephoneTunnel *tunnel)</argsstring>
        <name>sephone_tunnel_get_mode</name>
        <param>
          <type>const <ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the tunnel mode <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnel object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The current SephoneTunnelMode </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="228" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_stubs.c" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1ga7dff2342efb90f998afd6fd955adca0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t sephone_tunnel_get_activated</definition>
        <argsstring>(const SephoneTunnel *tunnel)</argsstring>
        <name>sephone_tunnel_get_activated</name>
        <param>
          <type>const <ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns whether the tunnel is activated. If mode is set to auto, this gives indication whether the automatic detection determined that tunnel was necessary or not. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>the tunnel </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if tunnel is in use, FALSE otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="236" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_stubs.c" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1ga4b4bbc50c92cd543bf1a26e3dbbcddc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t sephone_tunnel_connected</definition>
        <argsstring>(const SephoneTunnel *tunnel)</argsstring>
        <name>sephone_tunnel_connected</name>
        <param>
          <type>const <ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check whether the tunnel is connected <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnel object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean value telling if the tunnel is connected </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="244" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_stubs.c" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1gad10349c53421fb0bc38c4d27432ca196" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_tunnel_reconnect</definition>
        <argsstring>(SephoneTunnel *tunnel)</argsstring>
        <name>sephone_tunnel_reconnect</name>
        <param>
          <type><ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Force reconnection to the tunnel server. This method is useful when the device switches from wifi to Edge/3G or vice versa. In most cases the tunnel client socket won&apos;t be notified promptly that its connection is now zombie, so it is recommended to call this method that will cause the lost connection to be closed and new connection to be issued. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnel object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="253" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_stubs.c" bodystart="82" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1gaa10dd296d88671d6fd7370bcaf993d60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_tunnel_enable_sip</definition>
        <argsstring>(SephoneTunnel *tunnel, bool_t enable)</argsstring>
        <name>sephone_tunnel_enable_sip</name>
        <param>
          <type><ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set whether SIP packets must be directly sent to a UA or pass through the tunnel <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnel object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, SIP packets shall pass through the tunnel </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="260" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_stubs.c" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1ga97d324db4766bb0b8c0fb350c9ec2a6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t sephone_tunnel_sip_enabled</definition>
        <argsstring>(const SephoneTunnel *tunnel)</argsstring>
        <name>sephone_tunnel_sip_enabled</name>
        <param>
          <type>const <ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check whether tunnel is set to transport SIP packets <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnel object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean value telling whether SIP packets shall pass through the tunnel </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="267" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_stubs.c" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1ga36d2e575a301dd80ba6ed0aa53117830" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_tunnel_set_http_proxy</definition>
        <argsstring>(SephoneTunnel *tunnel, const char *host, int port, const char *username, const char *passwd)</argsstring>
        <name>sephone_tunnel_set_http_proxy</name>
        <param>
          <type><ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>username</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>passwd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set an optional http proxy to go through when connecting to tunnel server. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnel object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>http proxy host </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>http proxy port </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional http proxy username if the proxy request authentication. Currently only basic authentication is supported. Use NULL if not needed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>passwd</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional http proxy password. Use NULL if not needed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="277" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_stubs.c" bodystart="76" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1ga047b7c9de2a3ad1f5d39994e135628be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_tunnel_get_http_proxy</definition>
        <argsstring>(SephoneTunnel *tunnel, const char **host, int *port, const char **username, const char **passwd)</argsstring>
        <name>sephone_tunnel_get_http_proxy</name>
        <param>
          <type><ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>host</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>username</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>passwd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve optional http proxy configuration previously set with <ref refid="group__tunnel_1ga36d2e575a301dd80ba6ed0aa53117830" kindref="member">sephone_tunnel_set_http_proxy()</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnel object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>http proxy host </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>http proxy port </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional http proxy username if the proxy request authentication. Currently only basic authentication is supported. Use NULL if not needed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>passwd</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional http proxy password. Use NULL if not needed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="287" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_stubs.c" bodystart="79" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1ga789c542be364149a0ece78e4ae373ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_tunnel_set_http_proxy_auth_info</definition>
        <argsstring>(SephoneTunnel *tunnel, const char *username, const char *passwd)</argsstring>
        <name>sephone_tunnel_set_http_proxy_auth_info</name>
        <param>
          <type><ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>username</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>passwd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set authentication info for the http proxy <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnel object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>username</parametername>
</parameternamelist>
<parameterdescription>
<para>User name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>passwd</parametername>
</parameternamelist>
<parameterdescription>
<para>Password </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="295" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_stubs.c" bodystart="73" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1gaee9519e441737d8ae751212a2a2c6b11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_tunnel_enable</definition>
        <argsstring>(SephoneTunnel *tunnel, bool_t enabled)</argsstring>
        <name>sephone_tunnel_enable</name>
        <param>
          <type><ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets whether tunneling of SIP and RTP is required. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>If true enter in tunneled mode, if false exits from tunneled mode. The TunnelManager takes care of refreshing SIP registration when switching on or off the tunneled mode. </para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="deprecated_1_deprecated000027"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Replaced by <ref refid="group__tunnel_1gaeab232e3b55cb63ca66771b7029d7047" kindref="member">sephone_tunnel_set_mode()</ref> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="304" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_stubs.c" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1ga01c8e6bb5a8039de9b8d0bf8f32a4dc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t sephone_tunnel_enabled</definition>
        <argsstring>(const SephoneTunnel *tunnel)</argsstring>
        <name>sephone_tunnel_enabled</name>
        <param>
          <type>const <ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check whether tunnel is enabled <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>Tunnel object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a boolean indicating whether tunneled operation is enabled. </para></simplesect>
<xrefsect id="deprecated_1_deprecated000028"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Replaced by <ref refid="group__tunnel_1ga6ee1bc46587807822aa7280ba92506a2" kindref="member">sephone_tunnel_get_mode()</ref> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="312" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_stubs.c" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1gaf084d66d1181721eaf4b7ad035d72276" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_tunnel_auto_detect</definition>
        <argsstring>(SephoneTunnel *tunnel)</argsstring>
        <name>sephone_tunnel_auto_detect</name>
        <param>
          <type><ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start tunnel need detection. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>object In auto detect mode, the tunnel manager try to establish a real time rtp communication with the tunnel server on specified port. <linebreak/>
In case of success, the tunnel is automatically turned off. Otherwise, if no udp communication is feasible, tunnel mode is turned on. <linebreak/>
 Call this method each time to run the auto detection algorithm </para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="deprecated_1_deprecated000029"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Replaced by sephone_tunnel_set_mode(SephoneTunnelModeAuto) </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="322" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_stubs.c" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="group__tunnel_1ga9ab433364ca3c23a516d23d439c010da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t sephone_tunnel_auto_detect_enabled</definition>
        <argsstring>(SephoneTunnel *tunnel)</argsstring>
        <name>sephone_tunnel_auto_detect_enabled</name>
        <param>
          <type><ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref> *</type>
          <declname>tunnel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tell whether tunnel auto detection is enabled. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">tunnel</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneTunnel object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if auto detection is enabled, FALSE otherwise. </para></simplesect>
<xrefsect id="deprecated_1_deprecated000030"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Replaced by <ref refid="group__tunnel_1ga6ee1bc46587807822aa7280ba92506a2" kindref="member">sephone_tunnel_get_mode()</ref> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h" line="330" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel_stubs.c" bodystart="95" bodyend="95"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sephone_tunnel.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Fri<sp/>Dec<sp/>9,<sp/>2011</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/><sp/>2011<sp/><sp/>Belledonne<sp/>Communications</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Author:<sp/>Guillaume<sp/>Beraudo</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>Email:<sp/>guillaume.beraudo@linphone.org</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SEPHONETUNNEL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEPHONETUNNEL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sephonecore.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_SephoneTunnelConfig<sp/><ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga81d057dba88b0e9f8d8ddb18eccac653" kindref="member">_SephoneTunnelMode</ref><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__tunnel_1gga81d057dba88b0e9f8d8ddb18eccac653a323e7ec408e226d0f24f76032043be43" kindref="member">SephoneTunnelModeDisable</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__tunnel_1gga81d057dba88b0e9f8d8ddb18eccac653a787a89b81d238908848711e6088625e2" kindref="member">SephoneTunnelModeEnable</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__tunnel_1gga81d057dba88b0e9f8d8ddb18eccac653abe55bd5683035b2f0149133dcb9f23fb" kindref="member">SephoneTunnelModeAuto</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}<sp/><ref refid="group__tunnel_1ga892e60039180fb5f0c4b11bd247eb23e" kindref="member">SephoneTunnelMode</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">SEPHONE_PUBLIC<sp/>SephoneTunnelMode<sp/><ref refid="group__tunnel_1ga14c4d4e2585a78222172cb2561e5128e" kindref="member">sephone_tunnel_mode_from_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__tunnel_1ga42987b8439023e8a5482cee54e3bd11a" kindref="member">sephone_tunnel_mode_to_string</ref>(SephoneTunnelMode<sp/>mode);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">SEPHONE_PUBLIC<sp/><ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref><sp/>*<ref refid="group__tunnel_1ga9b0b69201d76d8c0895ea1e15525ff55" kindref="member">sephone_tunnel_config_new</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1gace057ce79d6bd608463a6612aa85dc04" kindref="member">sephone_tunnel_config_set_host</ref>(<ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref><sp/>*tunnel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*host);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__tunnel_1ga4cf028ef591c5387de4276b1e0c19b20" kindref="member">sephone_tunnel_config_get_host</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref><sp/>*tunnel);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga88852f7d61c44bff65cc4ff8dce62bca" kindref="member">sephone_tunnel_config_set_port</ref>(<ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref><sp/>*tunnel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga71e19711ec24a7338c45277c6c79cd7a" kindref="member">sephone_tunnel_config_get_port</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref><sp/>*tunnel);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga105c4aa8bb49eb7fab50bcdf5bebb329" kindref="member">sephone_tunnel_config_set_remote_udp_mirror_port</ref>(<ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref><sp/>*tunnel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remote_udp_mirror_port);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga2012a7d503dbd3ad101ac7d05720ba9a" kindref="member">sephone_tunnel_config_get_remote_udp_mirror_port</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref><sp/>*tunnel);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1gaffe9af00f03d3b4138722090cefbc4eb" kindref="member">sephone_tunnel_config_set_delay</ref>(<ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref><sp/>*tunnel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delay);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga6b64c8ee4709583219ea8453056d1589" kindref="member">sephone_tunnel_config_get_delay</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref><sp/>*tunnel);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga8499ad747f203089195427fe5fb0d1fc" kindref="member">sephone_tunnel_config_destroy</ref>(<ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref><sp/>*tunnel);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga0512e17112893797de9f847aa327df89" kindref="member">sephone_tunnel_add_server</ref>(<ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref><sp/>*tunnel,<sp/><ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref><sp/>*tunnel_config);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1gacf28a19306108a285925b1fd623c1b5e" kindref="member">sephone_tunnel_remove_server</ref>(<ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref><sp/>*tunnel,<sp/><ref refid="group__tunnel_1ga86674693c4d60b4e6dced7ffb782af24" kindref="member">SephoneTunnelConfig</ref><sp/>*tunnel_config);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MSList<sp/>*<ref refid="group__tunnel_1ga890e46b6483a74f5f924648c37ec52a1" kindref="member">sephone_tunnel_get_servers</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref><sp/>*tunnel);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1gabccf93fe04f06dd240921525b9d152ac" kindref="member">sephone_tunnel_clean_servers</ref>(<ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref><sp/>*tunnel);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1gaeab232e3b55cb63ca66771b7029d7047" kindref="member">sephone_tunnel_set_mode</ref>(<ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref><sp/>*tunnel,<sp/>SephoneTunnelMode<sp/>mode);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal">SEPHONE_PUBLIC<sp/>SephoneTunnelMode<sp/><ref refid="group__tunnel_1ga6ee1bc46587807822aa7280ba92506a2" kindref="member">sephone_tunnel_get_mode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref><sp/>*tunnel);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal">SEPHONE_PUBLIC<sp/>bool_t<sp/><ref refid="group__tunnel_1ga7dff2342efb90f998afd6fd955adca0c" kindref="member">sephone_tunnel_get_activated</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref><sp/>*tunnel);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">SEPHONE_PUBLIC<sp/>bool_t<sp/><ref refid="group__tunnel_1ga4b4bbc50c92cd543bf1a26e3dbbcddc9" kindref="member">sephone_tunnel_connected</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref><sp/>*tunnel);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1gad10349c53421fb0bc38c4d27432ca196" kindref="member">sephone_tunnel_reconnect</ref>(<ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref><sp/>*tunnel);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1gaa10dd296d88671d6fd7370bcaf993d60" kindref="member">sephone_tunnel_enable_sip</ref>(<ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref><sp/>*tunnel,<sp/>bool_t<sp/>enable);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">SEPHONE_PUBLIC<sp/>bool_t<sp/><ref refid="group__tunnel_1ga97d324db4766bb0b8c0fb350c9ec2a6e" kindref="member">sephone_tunnel_sip_enabled</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref><sp/>*tunnel);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga36d2e575a301dd80ba6ed0aa53117830" kindref="member">sephone_tunnel_set_http_proxy</ref>(<ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref><sp/>*tunnel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*host,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>username,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>passwd);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga047b7c9de2a3ad1f5d39994e135628be" kindref="member">sephone_tunnel_get_http_proxy</ref>(<ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref>*tunnel,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**host,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*port,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**username,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**passwd);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga789c542be364149a0ece78e4ae373ea8" kindref="member">sephone_tunnel_set_http_proxy_auth_info</ref>(<ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref>*tunnel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>username,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>passwd);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1gaee9519e441737d8ae751212a2a2c6b11" kindref="member">sephone_tunnel_enable</ref>(<ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref><sp/>*tunnel,<sp/>bool_t<sp/>enabled);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal">SEPHONE_PUBLIC<sp/>bool_t<sp/><ref refid="group__tunnel_1ga01c8e6bb5a8039de9b8d0bf8f32a4dc0" kindref="member">sephone_tunnel_enabled</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref><sp/>*tunnel);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__tunnel_1gaf084d66d1181721eaf4b7ad035d72276" kindref="member">sephone_tunnel_auto_detect</ref>(<ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref><sp/>*tunnel);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal">SEPHONE_PUBLIC<sp/>bool_t<sp/><ref refid="group__tunnel_1ga9ab433364ca3c23a516d23d439c010da" kindref="member">sephone_tunnel_auto_detect_enabled</ref>(<ref refid="group__tunnel_1ga847a1d32b74ff0861c779578fc770142" kindref="member">SephoneTunnel</ref><sp/>*tunnel);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//SEPHONETUNNEL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephone_tunnel.h"/>
  </compounddef>
</doxygen>
