<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="spconfig_8h" kind="file" language="C++">
    <compoundname>spconfig.h</compoundname>
    <includes local="no">mediastreamer2/mscommon.h</includes>
    <includes local="no">ortp/port.h</includes>
    <includedby refid="sephonecore_8h" local="yes">sephonecore.h</includedby>
    <includedby refid="address_8c" local="yes">address.c</includedby>
    <includedby refid="authentication_8c" local="yes">authentication.c</includedby>
    <includedby refid="callbacks_8c" local="yes">callbacks.c</includedby>
    <includedby refid="chat_8c" local="yes">chat.c</includedby>
    <includedby refid="conference_8c" local="yes">conference.c</includedby>
    <includedby refid="dict_8c" local="yes">dict.c</includedby>
    <includedby refid="ec-calibrator_8c" local="yes">ec-calibrator.c</includedby>
    <includedby refid="event_8c" local="yes">event.c</includedby>
    <includedby refid="friend_8c" local="yes">friend.c</includedby>
    <includedby refid="info_8c" local="yes">info.c</includedby>
    <includedby refid="misc_8c" local="yes">misc.c</includedby>
    <includedby refid="presence_8c" local="yes">presence.c</includedby>
    <includedby refid="proxy_8c" local="yes">proxy.c</includedby>
    <includedby refid="xml2spc_8h" local="yes">xml2spc.h</includedby>
    <includedby refid="sephone__tunnel__stubs_8c" local="yes">sephone_tunnel_stubs.c</includedby>
    <includedby refid="sephonecall_8c" local="yes">sephonecall.c</includedby>
    <includedby refid="sephonecore_8c" local="yes">sephonecore.c</includedby>
    <includedby refid="spc2xml_8h" local="yes">spc2xml.h</includedby>
    <includedby refid="spconfig_8c" local="yes">spconfig.c</includedby>
    <includedby refid="upnp_8c" local="yes">upnp.c</includedby>
    <incdepgraph>
      <node id="258">
        <label>spconfig.h</label>
        <link refid="spconfig_8h"/>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
      </node>
      <node id="260">
        <label>ortp/port.h</label>
      </node>
      <node id="259">
        <label>mediastreamer2/mscommon.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="spconfig_8h_1ac2bea407d9fe2709b8fe6e0a4754de94" prot="public" static="no">
        <name>SEPHONE_PUBLIC</name>
        <initializer>MS2_PUBLIC</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="31" column="10" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" prot="public" static="no">
        <type>struct _SpConfig</type>
        <definition>typedef struct _SpConfig SpConfig</definition>
        <argsstring></argsstring>
        <name>SpConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The SpConfig object is used to manipulate a configuration file.</para><para>The format of the configuration file is a .ini like format:<itemizedlist>
<listitem><para>sections are defined in []</para></listitem><listitem><para>each section contains a sequence of key=value pairs.</para></listitem></itemizedlist>
</para><para>Example: <programlisting><codeline><highlight class="normal">[sound]</highlight></codeline>
<codeline><highlight class="normal">echocanceler=1</highlight></codeline>
<codeline><highlight class="normal">playback_dev=ALSA:<sp/>Default<sp/>device</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[video]</highlight></codeline>
<codeline><highlight class="normal">enabled=1</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="85" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__misc_1gaf2e6d9d07af18717584753d0b8990477" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
        <definition>SpConfig* sp_config_new</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>sp_config_new</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Instantiates a SpConfig object from a user config file. The caller of this constructor owns a reference. <ref refid="group__misc_1gaa28dbbfcb5ba410e26d6617ad1281d04" kindref="member">sp_config_unref()</ref> must be called when this object is no longer needed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the filename of the config file to read to fill the instantiated SpConfig </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__misc_1ga4270a4983b5ccd2bf4a64f07f0fbded2" kindref="member">sp_config_new_with_factory</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="65" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="336" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1gac3ec9f71b2d1d6072becdbc8defdeb9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
        <definition>SpConfig* sp_config_new_from_buffer</definition>
        <argsstring>(const char *buffer)</argsstring>
        <name>sp_config_new_from_buffer</name>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Instantiates a SpConfig object from a user provided buffer. The caller of this constructor owns a reference. <ref refid="group__misc_1gaa28dbbfcb5ba410e26d6617ad1281d04" kindref="member">sp_config_unref()</ref> must be called when this object is no longer needed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer from which the spconfig will be retrieved. We expect the buffer to be null-terminated. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__misc_1ga4270a4983b5ccd2bf4a64f07f0fbded2" kindref="member">sp_config_new_with_factory</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__misc_1gaf2e6d9d07af18717584753d0b8990477" kindref="member">sp_config_new</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="75" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="340" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga4270a4983b5ccd2bf4a64f07f0fbded2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
        <definition>SpConfig* sp_config_new_with_factory</definition>
        <argsstring>(const char *config_filename, const char *factory_config_filename)</argsstring>
        <name>sp_config_new_with_factory</name>
        <param>
          <type>const char *</type>
          <declname>config_filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>factory_config_filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Instantiates a SpConfig object from a user config file and a factory config file. The caller of this constructor owns a reference. <ref refid="group__misc_1gaa28dbbfcb5ba410e26d6617ad1281d04" kindref="member">sp_config_unref()</ref> must be called when this object is no longer needed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config_filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the filename of the user config file to read to fill the instantiated SpConfig </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>factory_config_filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the filename of the factory config file to read to fill the instantiated SpConfig </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="group__misc_1gaf2e6d9d07af18717584753d0b8990477" kindref="member">sp_config_new</ref></para></simplesect>
The user config file is read first to fill the SpConfig and then the factory config file is read. Therefore the configuration parameters defined in the user config file will be overwritten by the parameters defined in the factory config file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="89" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="360" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga4b2ee27b174396e7a19f83cce68168f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sp_config_read_file</definition>
        <argsstring>(SpConfig *spconfig, const char *filename)</argsstring>
        <name>sp_config_read_file</name>
        <param>
          <type><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads a user config file and fill the SpConfig with the read config values.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spconfig</parametername>
</parameternamelist>
<parameterdescription>
<para>The SpConfig object to fill with the content of the file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename of the config file to read to fill the SpConfig </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="97" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="404" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga5a32540697fb696aa4f306d9dbc844c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sp_config_get_string</definition>
        <argsstring>(const SpConfig *spconfig, const char *section, const char *key, const char *default_string)</argsstring>
        <name>sp_config_get_string</name>
        <param>
          <type>const <ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>default_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a configuration item as a string, given its section, key, and default value.</para><para>The default value string is returned if the config item isn&apos;t found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="105" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="462" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga27595a3d6b9eba1d1f1688777b53a4ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t sp_config_get_range</definition>
        <argsstring>(const SpConfig *spconfig, const char *section, const char *key, int *min, int *max, int default_min, int default_max)</argsstring>
        <name>sp_config_get_range</name>
        <param>
          <type>const <ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>max</declname>
        </param>
        <param>
          <type>int</type>
          <declname>default_min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>default_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a configuration item as a range, given its section, key, and default min and max values.</para><para><simplesect kind="return"><para>TRUE if the value is successfully parsed as a range, FALSE otherwise. If FALSE is returned, min and max are filled respectively with default_min and default_max values. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="114" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="476" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga3d31ae0b188509173833ba6216499759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sp_config_get_int</definition>
        <argsstring>(const SpConfig *spconfig, const char *section, const char *key, int default_value)</argsstring>
        <name>sp_config_get_int</name>
        <param>
          <type>const <ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>default_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a configuration item as an integer, given its section, key, and default value.</para><para>The default integer value is returned if the config item isn&apos;t found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="122" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="496" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga34da9945b671496f331ec94c9e5d9b03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t sp_config_get_int64</definition>
        <argsstring>(const SpConfig *spconfig, const char *section, const char *key, int64_t default_value)</argsstring>
        <name>sp_config_get_int64</name>
        <param>
          <type>const <ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>default_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a configuration item as a 64 bit integer, given its section, key, and default value.</para><para>The default integer value is returned if the config item isn&apos;t found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="130" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="510" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga189a14dc1516843a8ab145e10dfbb5a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float sp_config_get_float</definition>
        <argsstring>(const SpConfig *spconfig, const char *section, const char *key, float default_value)</argsstring>
        <name>sp_config_get_float</name>
        <param>
          <type>const <ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>float</type>
          <declname>default_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a configuration item as a float, given its section, key, and default value.</para><para>The default float value is returned if the config item isn&apos;t found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="138" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="522" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1gabdc99c184ea0d3a27899d221e0aa8d7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sp_config_set_string</definition>
        <argsstring>(SpConfig *spconfig, const char *section, const char *key, const char *value)</argsstring>
        <name>sp_config_set_string</name>
        <param>
          <type><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets a string config item </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="145" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="530" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga94aabc5fa76a637a9597f9df1e2a5710" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sp_config_set_range</definition>
        <argsstring>(SpConfig *spconfig, const char *section, const char *key, int min_value, int max_value)</argsstring>
        <name>sp_config_set_range</name>
        <param>
          <type><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>min_value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets a range config item </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="152" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="555" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga87891a504455bab6245575a9e01ab86a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sp_config_set_int</definition>
        <argsstring>(SpConfig *spconfig, const char *section, const char *key, int value)</argsstring>
        <name>sp_config_set_int</name>
        <param>
          <type><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets an integer config item </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="159" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="561" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1gabe7b5007bc6ddc390534fbab92b1a117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sp_config_set_int_hex</definition>
        <argsstring>(SpConfig *spconfig, const char *section, const char *key, int value)</argsstring>
        <name>sp_config_set_int_hex</name>
        <param>
          <type><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets an integer config item, but store it as hexadecimal </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="166" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="567" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga94c47f17dfd718bde07af6610c6deed0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sp_config_set_int64</definition>
        <argsstring>(SpConfig *spconfig, const char *section, const char *key, int64_t value)</argsstring>
        <name>sp_config_set_int64</name>
        <param>
          <type><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets a 64 bits integer config item </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="173" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="573" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1gacaee06f197aec98e95ae2247809eea03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sp_config_set_float</definition>
        <argsstring>(SpConfig *spconfig, const char *section, const char *key, float value)</argsstring>
        <name>sp_config_set_float</name>
        <param>
          <type><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets a float config item </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="180" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="580" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga4f746df9c9a41d5e5338cc08f920a6d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sp_config_sync</definition>
        <argsstring>(SpConfig *spconfig)</argsstring>
        <name>sp_config_sync</name>
        <param>
          <type><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes the config file to disk. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="187" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="612" bodyend="641"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga78dfaae90ffb724dcfe2c0d7f86f88c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sp_config_has_section</definition>
        <argsstring>(const SpConfig *spconfig, const char *section)</argsstring>
        <name>sp_config_has_section</name>
        <param>
          <type>const <ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>section</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns 1 if a given section is present in the configuration. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="194" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="643" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga433e2e6ccd61949f7a7014edcf146d34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sp_config_clean_section</definition>
        <argsstring>(SpConfig *spconfig, const char *section)</argsstring>
        <name>sp_config_clean_section</name>
        <param>
          <type><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>section</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes every pair of key,value in a section and remove the section. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="201" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="670" bodyend="676"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga8ff4198d74b35c9c868c332ba2029578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sp_config_for_each_section</definition>
        <argsstring>(const SpConfig *spconfig, void(*callback)(const char *section, void *ctx), void *ctx)</argsstring>
        <name>sp_config_for_each_section</name>
        <param>
          <type>const <ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>void(*)(const char *section, void *ctx)</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Call a function for each section present in the configuration. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="208" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="648" bodyend="655"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga5f660e88cf35f4fe10858d51d6dac334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sp_config_for_each_entry</definition>
        <argsstring>(const SpConfig *spconfig, const char *section, void(*callback)(const char *entry, void *ctx), void *ctx)</argsstring>
        <name>sp_config_for_each_entry</name>
        <param>
          <type>const <ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>section</declname>
        </param>
        <param>
          <type>void(*)(const char *entry, void *ctx)</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Call a function for each entry present in a section configuration. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="215" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="657" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="spconfig_8h_1ab96c0680d5414cb946f288756a8b000a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sp_config_needs_commit</definition>
        <argsstring>(const SpConfig *spconfig)</argsstring>
        <name>sp_config_needs_commit</name>
        <param>
          <type>const <ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="218" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="678" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="spconfig_8h_1ace085df9993aa0647ea463ab99e5f924" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sp_config_destroy</definition>
        <argsstring>(SpConfig *cfg)</argsstring>
        <name>sp_config_destroy</name>
        <param>
          <type><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="220" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="442" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1gaa25b7f27c7c6e854842d220823e9a157" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sp_config_get_default_int</definition>
        <argsstring>(const SpConfig *spconfig, const char *section, const char *key, int default_value)</argsstring>
        <name>sp_config_get_default_int</name>
        <param>
          <type>const <ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>default_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a default configuration item as an integer, given its section, key, and default value.</para><para>The default integer value is returned if the config item isn&apos;t found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="228" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="684" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga2e505cc363567c39ba7b2432b8a8526e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t sp_config_get_default_int64</definition>
        <argsstring>(const SpConfig *spconfig, const char *section, const char *key, int64_t default_value)</argsstring>
        <name>sp_config_get_default_int64</name>
        <param>
          <type>const <ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>default_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a default configuration item as a 64 bit integer, given its section, key, and default value.</para><para>The default integer value is returned if the config item isn&apos;t found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="236" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="692" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga88e8c2cd1175d22a651a58c8cae24bfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float sp_config_get_default_float</definition>
        <argsstring>(const SpConfig *spconfig, const char *section, const char *key, float default_value)</argsstring>
        <name>sp_config_get_default_float</name>
        <param>
          <type>const <ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>float</type>
          <declname>default_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a default configuration item as a float, given its section, key, and default value.</para><para>The default float value is returned if the config item isn&apos;t found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="244" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="700" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga14accac514c701265152c57c19639ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sp_config_get_default_string</definition>
        <argsstring>(const SpConfig *spconfig, const char *section, const char *key, const char *default_value)</argsstring>
        <name>sp_config_get_default_string</name>
        <param>
          <type>const <ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>default_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a default configuration item as a string, given its section, key, and default value.</para><para>The default value string is returned if the config item isn&apos;t found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="252" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="708" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga18ef3776828f78a456f6eea14b57e1b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sp_config_get_section_param_string</definition>
        <argsstring>(const SpConfig *spconfig, const char *section, const char *key, const char *default_value)</argsstring>
        <name>sp_config_get_section_param_string</name>
        <param>
          <type>const <ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>default_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves a section parameter item as a string, given its section and key.</para><para>The default value string is returned if the config item isn&apos;t found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="260" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="451" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1ga92530141fd85c33a21a8991efb79c393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
        <definition>SpConfig* sp_config_ref</definition>
        <argsstring>(SpConfig *spconfig)</argsstring>
        <name>sp_config_ref</name>
        <param>
          <type><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>increment reference count </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="267" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="431" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="group__misc_1gaa28dbbfcb5ba410e26d6617ad1281d04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sp_config_unref</definition>
        <argsstring>(SpConfig *spconfig)</argsstring>
        <name>sp_config_unref</name>
        <param>
          <type><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decrement reference count, which will eventually free the object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="273" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="436" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="spconfig_8h_1ab13523dcf61e24657c5eab41d0b82000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sp_config_write_relative_file</definition>
        <argsstring>(const SpConfig *spconfig, const char *filename, const char *data)</argsstring>
        <name>sp_config_write_relative_file</name>
        <param>
          <type>const <ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Write a string in a file placed relatively with the Sephone configuration file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spconfig</parametername>
</parameternamelist>
<parameterdescription>
<para>SpConfig instance used as a reference </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file where to write data. The name is relative to the place of the config file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>String to write </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="281" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="732" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="spconfig_8h_1a250892969faeb168ce6f17e1c285c5cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sp_config_read_relative_file</definition>
        <argsstring>(const SpConfig *spconfig, const char *filename, char *data, size_t max_length)</argsstring>
        <name>sp_config_read_relative_file</name>
        <param>
          <type>const <ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref> *</type>
          <declname>spconfig</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_length</declname>
        </param>
        <briefdescription>
<para>Read a string from a file placed beside the Sephone configuration file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spconfig</parametername>
</parameternamelist>
<parameterdescription>
<para>SpConfig instance used as a reference </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file where data will be read from. The name is relative to the place of the config file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer where read string will be stored </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -1 on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h" line="291" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.c" bodystart="751" bodyend="778"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spconfig.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Thu<sp/>Mar<sp/>10<sp/>15:02:49<sp/>2005</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/><sp/>2005<sp/><sp/>Simon<sp/>Morlat</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Email<sp/>simon.morlat@linphone.org</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SPCONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPCONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mediastreamer2/mscommon.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ortp/port.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SEPHONE_PUBLIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>SEPHONE_PUBLIC<sp/>MS2_PUBLIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_SpConfig<sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">SEPHONE_PUBLIC<sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*<sp/><ref refid="group__misc_1gaf2e6d9d07af18717584753d0b8990477" kindref="member">sp_config_new</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">SEPHONE_PUBLIC<sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*<sp/><ref refid="group__misc_1gac3ec9f71b2d1d6072becdbc8defdeb9c" kindref="member">sp_config_new_from_buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">SEPHONE_PUBLIC<sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*<sp/><ref refid="group__misc_1ga4270a4983b5ccd2bf4a64f07f0fbded2" kindref="member">sp_config_new_with_factory</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*config_filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*factory_config_filename);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga4b2ee27b174396e7a19f83cce68168f3" kindref="member">sp_config_read_file</ref>(<ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__misc_1ga5a32540697fb696aa4f306d9dbc844c5" kindref="member">sp_config_get_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*default_string);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">SEPHONE_PUBLIC<sp/>bool_t<sp/><ref refid="group__misc_1ga27595a3d6b9eba1d1f1688777b53a4ec" kindref="member">sp_config_get_range</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*max,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>default_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>default_max);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga3d31ae0b188509173833ba6216499759" kindref="member">sp_config_get_int</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>default_value);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">SEPHONE_PUBLIC<sp/>int64_t<sp/><ref refid="group__misc_1ga34da9945b671496f331ec94c9e5d9b03" kindref="member">sp_config_get_int64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/>int64_t<sp/>default_value);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga189a14dc1516843a8ab145e10dfbb5a5" kindref="member">sp_config_get_float</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>default_value);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__misc_1gabdc99c184ea0d3a27899d221e0aa8d7a" kindref="member">sp_config_set_string</ref>(<ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga94aabc5fa76a637a9597f9df1e2a5710" kindref="member">sp_config_set_range</ref>(<ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_value);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga87891a504455bab6245575a9e01ab86a" kindref="member">sp_config_set_int</ref>(<ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__misc_1gabe7b5007bc6ddc390534fbab92b1a117" kindref="member">sp_config_set_int_hex</ref>(<ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga94c47f17dfd718bde07af6610c6deed0" kindref="member">sp_config_set_int64</ref>(<ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/>int64_t<sp/>value);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__misc_1gacaee06f197aec98e95ae2247809eea03" kindref="member">sp_config_set_float</ref>(<ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga4f746df9c9a41d5e5338cc08f920a6d6" kindref="member">sp_config_sync</ref>(<ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga78dfaae90ffb724dcfe2c0d7f86f88c2" kindref="member">sp_config_has_section</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga433e2e6ccd61949f7a7014edcf146d34" kindref="member">sp_config_clean_section</ref>(<ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga8ff4198d74b35c9c868c332ba2029578" kindref="member">sp_config_for_each_section</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*callback)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga5f660e88cf35f4fe10858d51d6dac334" kindref="member">sp_config_for_each_entry</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*callback)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*entry,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">/*tells<sp/>whether<sp/>uncommited<sp/>(with<sp/>sp_config_sync())<sp/>modifications<sp/>exist*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sp_config_needs_commit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sp_config_destroy(<ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*cfg);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__misc_1gaa25b7f27c7c6e854842d220823e9a157" kindref="member">sp_config_get_default_int</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>default_value);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal">SEPHONE_PUBLIC<sp/>int64_t<sp/><ref refid="group__misc_1ga2e505cc363567c39ba7b2432b8a8526e" kindref="member">sp_config_get_default_int64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/>int64_t<sp/>default_value);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga88e8c2cd1175d22a651a58c8cae24bfc" kindref="member">sp_config_get_default_float</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>default_value);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__misc_1ga14accac514c701265152c57c19639ab0" kindref="member">sp_config_get_default_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*default_value);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__misc_1ga18ef3776828f78a456f6eea14b57e1b3" kindref="member">sp_config_get_section_param_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*section,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*default_value);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">SEPHONE_PUBLIC<sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*<ref refid="group__misc_1ga92530141fd85c33a21a8991efb79c393" kindref="member">sp_config_ref</ref>(<ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__misc_1gaa28dbbfcb5ba410e26d6617ad1281d04" kindref="member">sp_config_unref</ref>(<ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sp_config_write_relative_file(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal">SEPHONE_PUBLIC<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sp_config_read_relative_file(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__misc_1ga224933b87fd3d0bbcb9b61850ddfa3fb" kindref="member">SpConfig</ref><sp/>*spconfig,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_length);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/spconfig.h"/>
  </compounddef>
</doxygen>
