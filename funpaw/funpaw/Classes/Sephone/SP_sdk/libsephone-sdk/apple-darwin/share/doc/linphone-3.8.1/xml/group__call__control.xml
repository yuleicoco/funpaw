<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="group__call__control" kind="group">
    <compoundname>call_control</compoundname>
    <title>Placing and receiving calls</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__call__control_1ga00d211fb0507786c57f8952044eba79e" prot="public" static="no">
        <name>_SephoneMediaDirection</name>
        <enumvalue id="group__call__control_1gga00d211fb0507786c57f8952044eba79eabb67eb0d3979325f688a35974fc08c54" prot="public">
          <name>SephoneMediaDirectionInactive</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga00d211fb0507786c57f8952044eba79ea42bbbfd3ba50b6c6cd073e97e93d4c25" prot="public">
          <name>SephoneMediaDirectionSendOnly</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No active media not supported yet </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga00d211fb0507786c57f8952044eba79eaa5de509fe265863ac177cb6ff236ed10" prot="public">
          <name>SephoneMediaDirectionRecvOnly</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Send only mode </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga00d211fb0507786c57f8952044eba79ead4df0977384f749a081c5635c0ac1a28" prot="public">
          <name>SephoneMediaDirectionSendRecv</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>recv only mode </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indicates for a given media the stream direction </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="36" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" bodystart="36" bodyend="42"/>
      </memberdef>
      <memberdef kind="enum" id="group__call__control_1ga38f04c02ef42854ee9f3d34206f5d5cd" prot="public" static="no">
        <name>_SephonePrivacy</name>
        <enumvalue id="group__call__control_1gga38f04c02ef42854ee9f3d34206f5d5cdacbe9112d3fe524c32d77673a103d76f6" prot="public">
          <name>SephonePrivacyNone</name>
          <initializer>=0x0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Privacy services must not perform any privacy function </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga38f04c02ef42854ee9f3d34206f5d5cda7f4af0a5269dfb78df789a16a89be3ce" prot="public">
          <name>SephonePrivacyUser</name>
          <initializer>=0x1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Request that privacy services provide a user-level privacy function. With this mode, &quot;from&quot; header is hidden, usually replaced by From: &quot;Anonymous&quot; &lt;sip:<ulink url="mailto:anonymous@anonymous.invalid">anonymous@anonymous.invalid</ulink>&gt; </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga38f04c02ef42854ee9f3d34206f5d5cda841383cfad599208a5e7bd0a14628162" prot="public">
          <name>SephonePrivacyHeader</name>
          <initializer>=0x2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Request that privacy services modify headers that cannot be set arbitrarily by the user (Contact/Via). </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga38f04c02ef42854ee9f3d34206f5d5cda83133997dfd2fdbc273ba36154affb0f" prot="public">
          <name>SephonePrivacySession</name>
          <initializer>=0x4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Request that privacy services provide privacy for session media </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga38f04c02ef42854ee9f3d34206f5d5cdaef250be616630badcb07847f83337423" prot="public">
          <name>SephonePrivacyId</name>
          <initializer>=0x8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>rfc3325 The presence of this privacy type in a Privacy header field indicates that the user would like the Network Asserted Identity to be kept private with respect to SIP entities outside the Trust Domain with which the user authenticated. Note that a user requesting multiple types of privacy MUST include all of the requested privacy types in its Privacy header field value </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga38f04c02ef42854ee9f3d34206f5d5cda660a1f732a77fc3264ff74b893d70dd8" prot="public">
          <name>SephonePrivacyCritical</name>
          <initializer>=0x10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Privacy service must perform the specified services or fail the request </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga38f04c02ef42854ee9f3d34206f5d5cda885f3c27efe7c769b5b056fc82f82f12" prot="public">
          <name>SephonePrivacyDefault</name>
          <initializer>=0x8000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Special keyword to use privacy as defined either globally or by proxy using <ref refid="group__proxies_1ga19b23ba98d400adfe416ba55610928e8" kindref="member">sephone_proxy_config_set_privacy()</ref> </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines privacy policy to apply as described by rfc3323 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.h" line="316" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.h" bodystart="316" bodyend="359"/>
      </memberdef>
      <memberdef kind="enum" id="group__call__control_1ga02e926dd293c3054ec3b1b145d09de3b" prot="public" static="no">
        <name>_SephoneCallState</name>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3ba3b67f93ffe1944fd21d018bbc369efd8" prot="public">
          <name>SephoneCallIdle</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Initial call state </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3ba63b15c2574a5724da57cf0e377cd4c91" prot="public">
          <name>SephoneCallIncomingReceived</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>This is a new incoming call </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3ba575309df965824fcf53c5b7e488ab8a9" prot="public">
          <name>SephoneCallOutgoingInit</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An outgoing call is started </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3baa16b36798a522f77579879be517d5ef7" prot="public">
          <name>SephoneCallOutgoingProgress</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An outgoing call is in progress </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3ba61d15f7e9d1d616ac8d92f37f8924080" prot="public">
          <name>SephoneCallOutgoingRinging</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An outgoing call is ringing at remote end </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3bac9f834703e7fc0a5bec2c86d18f56e1e" prot="public">
          <name>SephoneCallOutgoingEarlyMedia</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>An outgoing call is proposed early media </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3ba51a6c2fb79fe61a7bade9de0d5389913" prot="public">
          <name>SephoneCallConnected</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Connected, the call is answered </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3babe4153e12b21deab2f58f80df92ee40a" prot="public">
          <name>SephoneCallStreamsRunning</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The media streams are established and running </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3ba66caef311f7a20ebc9e42ac8180ea002" prot="public">
          <name>SephoneCallPausing</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The call is pausing at the initiative of local end </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3ba6f1e7b0f913ec60c5402ff67dc7e4903" prot="public">
          <name>SephoneCallPaused</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The call is paused, remote end has accepted the pause </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3ba7a7a1a9d9091fa568c84b58fae402ca4" prot="public">
          <name>SephoneCallResuming</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The call is being resumed by local end </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3ba3e3071461b80ce58550a84df0ef6a39c" prot="public">
          <name>SephoneCallRefered</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The call is being transfered to another party, resulting in a new outgoing call to follow immediately </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3baa694422725a956b802634a537f9cbdb9" prot="public">
          <name>SephoneCallError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The call encountered an error </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3ba267bd03db682af973f6577434590e6d5" prot="public">
          <name>SephoneCallEnd</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The call ended normally </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3ba52fb438226d381d630ca5ff5447d740e" prot="public">
          <name>SephoneCallPausedByRemote</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The call is paused by remote end </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3bad0ba6055a04fc211f82413ecae9672ab" prot="public">
          <name>SephoneCallUpdatedByRemote</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The call&apos;s parameters change is requested by remote end, used for example when video is added by remote </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3ba83ca7112a1058f9a7bfd8a59c5b22e74" prot="public">
          <name>SephoneCallIncomingEarlyMedia</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>We are proposing early media to an incoming call </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3bac7b639e36102e8947d2fa2933db7359e" prot="public">
          <name>SephoneCallUpdating</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A call update has been initiated by us </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3baf2803894caa751f54ef3a2d608034db7" prot="public">
          <name>SephoneCallReleased</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The call object is no more retained by the core </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3bae690e97d7a3009bf0b3b376e08ccea9c" prot="public">
          <name>SephoneCallEarlyUpdatedByRemote</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3ba13eca7b195d6e7ae2b76c17dd8d91f24" prot="public">
          <name>SephoneCallEarlyUpdating</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3ba4988b6bceabe83e79a12a1e32144e1e0" prot="public">
          <name>SephoneCallFirstImageDecoded</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3bab1bbe7476ac1fe43ceb56c9cf804f809" prot="public">
          <name>SephoneCallVideoDecodingError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SephoneCallState enum represents the different state a call can reach into. The application is notified of state changes through the <ref refid="struct__SephoneCoreVTable_1a8883daaa1b856c36619201b6570ce3d8" kindref="member">SephoneCoreVTable::call_state_changed</ref> callback. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.h" line="623" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.h" bodystart="623" bodyend="647"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__call__control_1gad0dbd125b276575c3be3b53bbe9f6fa7" prot="public" static="no">
        <type>enum <ref refid="group__call__control_1ga00d211fb0507786c57f8952044eba79e" kindref="member">_SephoneMediaDirection</ref></type>
        <definition>typedef enum _SephoneMediaDirection SephoneMediaDirection</definition>
        <argsstring></argsstring>
        <name>SephoneMediaDirection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Typedef for enum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="261" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" prot="public" static="no">
        <type>struct _SephoneCallParams</type>
        <definition>typedef struct _SephoneCallParams SephoneCallParams</definition>
        <argsstring></argsstring>
        <name>SephoneCallParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The SephoneCallParams is an object containing various call related parameters. It can be used to retrieve parameters from a currently running call or modify the call&apos;s characteristics dynamically. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="261" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" prot="public" static="no">
        <type>struct _SephoneCall</type>
        <definition>typedef struct _SephoneCall SephoneCall</definition>
        <argsstring></argsstring>
        <name>SephoneCall</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The SephoneCall object represents a call issued or received by the SephoneCore </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.h" line="6916" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__call__control_1ga130b3ffd1280230f30735e4ffc218706" prot="public" static="no">
        <type>enum <ref refid="group__call__control_1ga38f04c02ef42854ee9f3d34206f5d5cd" kindref="member">_SephonePrivacy</ref></type>
        <definition>typedef enum _SephonePrivacy  SephonePrivacy</definition>
        <argsstring></argsstring>
        <name>SephonePrivacy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines privacy policy to apply as described by rfc3323 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.h" line="359" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__call__control_1gaf8c8a5e36ff3047d29df670f36005a30" prot="public" static="no">
        <type>struct _SephonePlayer</type>
        <definition>typedef struct _SephonePlayer SephonePlayer</definition>
        <argsstring></argsstring>
        <name>SephonePlayer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Player interface. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.h" line="575" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.h" bodystart="581" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__call__control_1ga14b03bb18b5dd019740cefe4c49e36bd" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* SephonePlayerEofCallback) (struct _SephonePlayer *obj, void *user_data)</definition>
        <argsstring>)(struct _SephonePlayer *obj, void *user_data)</argsstring>
        <name>SephonePlayerEofCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback for notifying end of play (file). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>the SephonePlayer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>the user_data provided when calling sephone_player_open(). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.h" line="589" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.h" bodystart="589" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__call__control_1ga28a2545c7d1d828763bd648e023f9777" prot="public" static="no">
        <type>enum <ref refid="group__call__control_1ga02e926dd293c3054ec3b1b145d09de3b" kindref="member">_SephoneCallState</ref></type>
        <definition>typedef enum _SephoneCallState  SephoneCallState</definition>
        <argsstring></argsstring>
        <name>SephoneCallState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SephoneCallState enum represents the different state a call can reach into. The application is notified of state changes through the <ref refid="struct__SephoneCoreVTable_1a8883daaa1b856c36619201b6570ce3d8" kindref="member">SephoneCoreVTable::call_state_changed</ref> callback. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.h" line="647" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__call__control_1ga0c728991d044a4297970267ad3ffb2ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC void</type>
        <definition>SEPHONE_PUBLIC void sephone_call_params_add_custom_header</definition>
        <argsstring>(SephoneCallParams *cp, const char *header_name, const char *header_value)</argsstring>
        <name>sephone_call_params_add_custom_header</name>
        <param>
          <type><ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>header_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>header_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a custom SIP header in the INVITE for a call. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> to add a custom SIP header to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">header_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the header to add. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">header_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The content of the header to add. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="71" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga8f3f8f15b6e812d03bf416e09576910a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
        <definition>SEPHONE_PUBLIC SephoneCallParams* sephone_call_params_copy</definition>
        <argsstring>(const SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_copy</name>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy an existing SephoneCallParams object to a new SephoneCallParams object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>The SephoneCallParams object to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A copy of the SephoneCallParams object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="78" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="81" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga343f30064bae67b864028873c8228197" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC bool_t</type>
        <definition>SEPHONE_PUBLIC bool_t sephone_call_params_early_media_sending_enabled</definition>
        <argsstring>(const SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_early_media_sending_enabled</name>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indicate whether sending of early media was enabled. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean value telling whether sending of early media was enabled. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="85" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga40e9b2ec7c564086332eee966a5bd9c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC void</type>
        <definition>SEPHONE_PUBLIC void sephone_call_params_enable_early_media_sending</definition>
        <argsstring>(SephoneCallParams *cp, bool_t enabled)</argsstring>
        <name>sephone_call_params_enable_early_media_sending</name>
        <param>
          <type><ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable sending of real early media (during outgoing calls). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean value telling whether to enable early media sending or not. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="92" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gad2541c4f286dccba33c0f4dd0c08b4e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC void</type>
        <definition>SEPHONE_PUBLIC void sephone_call_params_enable_low_bandwidth</definition>
        <argsstring>(SephoneCallParams *cp, bool_t enabled)</argsstring>
        <name>sephone_call_params_enable_low_bandwidth</name>
        <param>
          <type><ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indicate low bandwith mode. Configuring a call to low bandwidth mode will result in the core to activate several settings for the call in order to ensure that bitrate usage is lowered to the minimum possible. Typically, ptime (packetization time) will be increased, audio codec&apos;s output bitrate will be targetted to 20kbit/s provided that it is achievable by the codec selected after SDP handshake. Video is automatically disabled. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean value telling whether to activate the low bandwidth mode or not. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="102" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga9984ed816d3e2fb691ecd6aa5dee7b71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC void</type>
        <definition>SEPHONE_PUBLIC void sephone_call_params_enable_video</definition>
        <argsstring>(SephoneCallParams *cp, bool_t enabled)</argsstring>
        <name>sephone_call_params_enable_video</name>
        <param>
          <type><ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable video stream. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enabled</parametername>
</parameternamelist>
<parameterdescription>
<para>A boolean value telling whether to enable video or not. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="109" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="106" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gab3416a4e3f395ca0ceca05e0da54e7e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC const char *</type>
        <definition>SEPHONE_PUBLIC const char* sephone_call_params_get_custom_header</definition>
        <argsstring>(const SephoneCallParams *cp, const char *header_name)</argsstring>
        <name>sephone_call_params_get_custom_header</name>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>header_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a custom SIP header. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> to get the custom SIP header from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">header_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the header to get. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The content of the header or NULL if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="117" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gae0f027489e7fc7e2af003100d6a109f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC bool_t</type>
        <definition>SEPHONE_PUBLIC bool_t sephone_call_params_get_local_conference_mode</definition>
        <argsstring>(const SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_get_local_conference_mode</name>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tell whether the call is part of the locally managed conference. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean value telling whether the call is part of the locally managed conference. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="124" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga079e42c995c6d1324f624634f9f23013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC <ref refid="group__media__parameters_1ga29e11c9d4075ab45652dab98237485d7" kindref="member">SephoneMediaEncryption</ref></type>
        <definition>SEPHONE_PUBLIC SephoneMediaEncryption sephone_call_params_get_media_encryption</definition>
        <argsstring>(const SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_get_media_encryption</name>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the kind of media encryption selected for the call. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The kind of media encryption selected for the call. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="131" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gae7202ccaf464d8523c93c9bfc0bbf469" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC SephonePrivacyMask</type>
        <definition>SEPHONE_PUBLIC SephonePrivacyMask sephone_call_params_get_privacy</definition>
        <argsstring>(const SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_get_privacy</name>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get requested level of privacy for the call. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The privacy mode used for the call. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="138" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga5deed8fbdf4a64bd21b1bf106e0c288f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC float</type>
        <definition>SEPHONE_PUBLIC float sephone_call_params_get_received_framerate</definition>
        <argsstring>(const SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_get_received_framerate</name>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the framerate of the video that is received. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The actual received framerate in frames per seconds, 0 if not available. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="145" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gaf0a7b31e67c6c479a8de6391ee514fd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC MSVideoSize</type>
        <definition>SEPHONE_PUBLIC MSVideoSize sephone_call_params_get_received_video_size</definition>
        <argsstring>(const SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_get_received_video_size</name>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the size of the video that is received. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The received video size or MS_VIDEO_SIZE_UNKNOWN if not available. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="152" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="132" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gad4772ce8ece966f444a7effcc3b47dab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC const char *</type>
        <definition>SEPHONE_PUBLIC const char* sephone_call_params_get_record_file</definition>
        <argsstring>(const SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_get_record_file</name>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the path for the audio recording of the call. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The path to the audio recording of the call. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="159" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga4dc3e28715640de40fb49e5a13cfc35e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC const char *</type>
        <definition>SEPHONE_PUBLIC const char* sephone_call_params_get_rtp_profile</definition>
        <argsstring>(const SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_get_rtp_profile</name>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the RTP profile being used. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The RTP profile. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="166" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga52067aae128c79e3113e1d094eee0421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC float</type>
        <definition>SEPHONE_PUBLIC float sephone_call_params_get_sent_framerate</definition>
        <argsstring>(const SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_get_sent_framerate</name>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the framerate of the video that is sent. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The actual sent framerate in frames per seconds, 0 if not available. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="173" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga86a8b217fa14089f760fa3e5e5437286" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC MSVideoSize</type>
        <definition>SEPHONE_PUBLIC MSVideoSize sephone_call_params_get_sent_video_size</definition>
        <argsstring>(const SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_get_sent_video_size</name>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the size of the video that is sent. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCalParams object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The sent video size or MS_VIDEO_SIZE_UNKNOWN if not available. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="180" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga964fd0986cb1da50e838e826f066af0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC const char *</type>
        <definition>SEPHONE_PUBLIC const char* sephone_call_params_get_session_name</definition>
        <argsstring>(const SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_get_session_name</name>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the session name of the media session (ie in SDP). Subject from the SIP message can be retrieved using <ref refid="group__call__control_1gab3416a4e3f395ca0ceca05e0da54e7e0" kindref="member">sephone_call_params_get_custom_header()</ref> and is different. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The session name of the media session. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="188" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga6275caff2e47901202c44241f794fd29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC const <ref refid="group__media__parameters_1ga38321b6d7ec007ef93279ef9ee5cae78" kindref="member">SephonePayloadType</ref> *</type>
        <definition>SEPHONE_PUBLIC const SephonePayloadType* sephone_call_params_get_used_audio_codec</definition>
        <argsstring>(const SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_get_used_audio_codec</name>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the audio codec used in the call, described as a SephonePayloadType object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The SephonePayloadType object corresponding to the audio codec being used in the call. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="195" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gaad71d75460ced446ad60cbaaac218888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC const <ref refid="group__media__parameters_1ga38321b6d7ec007ef93279ef9ee5cae78" kindref="member">SephonePayloadType</ref> *</type>
        <definition>SEPHONE_PUBLIC const SephonePayloadType* sephone_call_params_get_used_video_codec</definition>
        <argsstring>(const SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_get_used_video_codec</name>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the video codec used in the call, described as a SephonePayloadType structure. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The SephonePayloadType object corresponding to the video codec being used in the call. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="202" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga8201465d94f236ae30602d5398173f3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC bool_t</type>
        <definition>SEPHONE_PUBLIC bool_t sephone_call_params_low_bandwidth_enabled</definition>
        <argsstring>(const SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_low_bandwidth_enabled</name>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tell whether the call has been configured in low bandwidth mode or not. This mode can be automatically discovered thanks to a stun server when activate_edge_workarounds=1 in section [net] of configuration file. An application that would have reliable way to know network capacity may not use activate_edge_workarounds=1 but instead manually configure low bandwidth mode with <ref refid="group__call__control_1gad2541c4f286dccba33c0f4dd0c08b4e8" kindref="member">sephone_call_params_enable_low_bandwidth()</ref>. When enabled, this param may transform a call request with video in audio only mode. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean value telling whether the low bandwidth mode has been configured/detected. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="213" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga629dc9f976175e30a45ee00dee944186" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC void</type>
        <definition>SEPHONE_PUBLIC void sephone_call_params_set_audio_bandwidth_limit</definition>
        <argsstring>(SephoneCallParams *cp, int bw)</argsstring>
        <name>sephone_call_params_set_audio_bandwidth_limit</name>
        <param>
          <type><ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Refine bandwidth settings for this call by setting a bandwidth limit for audio streams. As a consequence, codecs whose bitrates are not compatible with this limit won&apos;t be used. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bw</parametername>
</parameternamelist>
<parameterdescription>
<para>The audio bandwidth limit to set in kbit/s. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="221" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="168" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga6742e72cf6996c8b4270fd3e5c194422" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC void</type>
        <definition>SEPHONE_PUBLIC void sephone_call_params_set_media_encryption</definition>
        <argsstring>(SephoneCallParams *cp, SephoneMediaEncryption enc)</argsstring>
        <name>sephone_call_params_set_media_encryption</name>
        <param>
          <type><ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <param>
          <type><ref refid="group__media__parameters_1ga29e11c9d4075ab45652dab98237485d7" kindref="member">SephoneMediaEncryption</ref></type>
          <declname>enc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set requested media encryption for a call. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">enc</parametername>
</parameternamelist>
<parameterdescription>
<para>The media encryption to use for the call. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="228" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="172" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga7d3bdb6ddd80e9d0c52a44e37d9e65c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC void</type>
        <definition>SEPHONE_PUBLIC void sephone_call_params_set_privacy</definition>
        <argsstring>(SephoneCallParams *params, SephonePrivacyMask privacy)</argsstring>
        <name>sephone_call_params_set_privacy</name>
        <param>
          <type><ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>params</declname>
        </param>
        <param>
          <type>SephonePrivacyMask</type>
          <declname>privacy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set requested level of privacy for the call.  <language-tags>javascript</language-tags>  <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">privacy</parametername>
</parameternamelist>
<parameterdescription>
<para>The privacy mode to used for the call. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="236" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="176" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga885463eb825a75de4cc5c5835daf9e4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC void</type>
        <definition>SEPHONE_PUBLIC void sephone_call_params_set_record_file</definition>
        <argsstring>(SephoneCallParams *cp, const char *path)</argsstring>
        <name>sephone_call_params_set_record_file</name>
        <param>
          <type><ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable recording of the call. This function must be used before the call parameters are assigned to the call. The call recording can be started and paused after the call is established with <ref refid="group__call__misc_1gafe73207455c50945718abb84b3baf950" kindref="member">sephone_call_start_recording()</ref> and sephone_call_pause_recording(). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>A string containing the path and filename of the file where audio/video streams are to be written. The filename must have either .mkv or .wav extention. The video stream will be written only if a MKV file is given. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="247" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="180" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga311c5a9fdda1e6bcceb2365e72cc92a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC void</type>
        <definition>SEPHONE_PUBLIC void sephone_call_params_set_session_name</definition>
        <argsstring>(SephoneCallParams *cp, const char *name)</argsstring>
        <name>sephone_call_params_set_session_name</name>
        <param>
          <type><ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the session name of the media session (ie in SDP). Subject from the SIP message (which is different) can be set using sephone_call_params_set_custom_header(). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The session name to be used. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="255" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="188" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga745912b664143fcb1df7d6aa628619d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC bool_t</type>
        <definition>SEPHONE_PUBLIC bool_t sephone_call_params_video_enabled</definition>
        <argsstring>(const SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_video_enabled</name>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tell whether video is enabled or not. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean value telling whether video is enabled or not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="262" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga3844befc6d1bd3be4f75bc70b8d77660" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC <ref refid="group__call__control_1gad0dbd125b276575c3be3b53bbe9f6fa7" kindref="member">SephoneMediaDirection</ref></type>
        <definition>SEPHONE_PUBLIC SephoneMediaDirection sephone_call_params_get_audio_direction</definition>
        <argsstring>(const SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_get_audio_direction</name>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the audio stream direction. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cl</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The audio stream direction associated with the call params. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="269" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="200" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga650fa9ab0f9d0cc8bdfd5613c6a29cdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC <ref refid="group__call__control_1gad0dbd125b276575c3be3b53bbe9f6fa7" kindref="member">SephoneMediaDirection</ref></type>
        <definition>SEPHONE_PUBLIC SephoneMediaDirection sephone_call_params_get_video_direction</definition>
        <argsstring>(const SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_get_video_direction</name>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the video stream direction. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cl</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The video stream direction associated with the call params. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="276" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="204" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga88f9329e6ee46008ae11c1822b46be35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC void</type>
        <definition>SEPHONE_PUBLIC void sephone_call_params_set_audio_direction</definition>
        <argsstring>(SephoneCallParams *cp, SephoneMediaDirection dir)</argsstring>
        <name>sephone_call_params_set_audio_direction</name>
        <param>
          <type><ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gad0dbd125b276575c3be3b53bbe9f6fa7" kindref="member">SephoneMediaDirection</ref></type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the audio stream direction. Only relevant for multicast <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cl</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">The</parametername>
</parameternamelist>
<parameterdescription>
<para>audio stream direction associated with this call params. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="283" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="208" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gaa5b6cc3fa807def644b3de1e2742e9a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC void</type>
        <definition>SEPHONE_PUBLIC void sephone_call_params_set_video_direction</definition>
        <argsstring>(SephoneCallParams *cp, SephoneMediaDirection dir)</argsstring>
        <name>sephone_call_params_set_video_direction</name>
        <param>
          <type><ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gad0dbd125b276575c3be3b53bbe9f6fa7" kindref="member">SephoneMediaDirection</ref></type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the video stream direction. Only relevant for multicast <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cl</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">The</parametername>
</parameternamelist>
<parameterdescription>
<para>video stream direction associated with this call params. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="290" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga93d77bda92d8379e29cb63578e611465" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC void *</type>
        <definition>SEPHONE_PUBLIC void* sephone_call_params_get_user_data</definition>
        <argsstring>(const SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_get_user_data</name>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the user data associated with the call params. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cl</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The user data associated with the call params. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="302" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="221" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga5427c8786567f8ac0f1a5322d7fe5213" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC void</type>
        <definition>SEPHONE_PUBLIC void sephone_call_params_set_user_data</definition>
        <argsstring>(SephoneCallParams *cp, void *ud)</argsstring>
        <name>sephone_call_params_set_user_data</name>
        <param>
          <type><ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ud</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assign a user data to the call params. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cl</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ud</parametername>
</parameternamelist>
<parameterdescription>
<para>The user data to associate with the call params. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="309" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="225" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gae6f4a728112c98712d25b1623f9cfab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
        <definition>SEPHONE_PUBLIC SephoneCallParams* sephone_call_params_ref</definition>
        <argsstring>(SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_ref</name>
        <param>
          <type><ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Acquire a reference to the call params. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cl</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The same SephoneCallParams object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="316" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="229" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gae7c8fa8ba8eee61e979e87727004457d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC void</type>
        <definition>SEPHONE_PUBLIC void sephone_call_params_unref</definition>
        <argsstring>(SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_unref</name>
        <param>
          <type><ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release a reference to the call params. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cl</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="322" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="234" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gad07de945411a718fd0061e0cf1024c02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SEPHONE_PUBLIC void</type>
        <definition>SEPHONE_PUBLIC void sephone_call_params_destroy</definition>
        <argsstring>(SephoneCallParams *cp)</argsstring>
        <name>sephone_call_params_destroy</name>
        <param>
          <type><ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a SephoneCallParams object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cp</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCallParams object </para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="deprecated_1_deprecated000009"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__call__control_1gae7c8fa8ba8eee61e979e87727004457d" kindref="member">sephone_call_params_unref()</ref> instead. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="337" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.c" bodystart="255" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga8da6372d304b10ad52b72d095e2985ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t sephone_call_get_authentication_token_verified</definition>
        <argsstring>(SephoneCall *call)</argsstring>
        <name>sephone_call_get_authentication_token_verified</name>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns whether ZRTP authentication token is verified. If not, it must be verified by users as described in ZRTP procedure. Once done, the application must inform of the results with <ref refid="group__call__control_1ga949852a881edb1cf3e6ec05e58edea06" kindref="member">sephone_call_set_authentication_token_verified()</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>call</parametername>
</parameternamelist>
<parameterdescription>
<para>the SephoneCall </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if authentication token is verifed, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="103" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga949852a881edb1cf3e6ec05e58edea06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_call_set_authentication_token_verified</definition>
        <argsstring>(SephoneCall *call, bool_t verified)</argsstring>
        <name>sephone_call_set_authentication_token_verified</name>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>verified</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the result of ZRTP short code verification by user. If remote party also does the same, it will update the ZRTP cache so that user&apos;s verification will not be required for the two users. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>call</parametername>
</parameternamelist>
<parameterdescription>
<para>the SephoneCall </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verified</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the ZRTP SAS is verified. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="224" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="224" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gaeb7203d1f76af26a8ebb341d22ef2cb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
        <definition>SephoneCall * sephone_call_ref</definition>
        <argsstring>(SephoneCall *obj)</argsstring>
        <name>sephone_call_ref</name>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Acquire a reference to the call. An application that wishes to retain a pointer to call object must use this function to unsure the pointer remains valid. Once the application no more needs this pointer, it must call <ref refid="group__call__control_1ga7a9033711fde2bb76c63421e8fe032b1" kindref="member">sephone_call_unref()</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">call</parametername>
</parameternamelist>
<parameterdescription>
<para>The call. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The same call. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1576" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1576" bodyend="1579"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga7a9033711fde2bb76c63421e8fe032b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_call_unref</definition>
        <argsstring>(SephoneCall *obj)</argsstring>
        <name>sephone_call_unref</name>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release reference to the call. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">call</parametername>
</parameternamelist>
<parameterdescription>
<para>The call. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1581" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1581" bodyend="1583"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga159594c7b670cdf27b62ec84cad3257c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>static unsigned int sephone_call_get_n_active_streams</definition>
        <argsstring>(const SephoneCall *call)</argsstring>
        <name>sephone_call_get_n_active_streams</name>
        <param>
          <type>const <ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1585" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1585" bodyend="1589"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga3440e61504e058274ecc74dd435938e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
        <definition>const SephoneCallParams* sephone_call_get_current_params</definition>
        <argsstring>(SephoneCall *call)</argsstring>
        <name>sephone_call_get_current_params</name>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns current parameters associated to the call. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1594" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1594" bodyend="1654"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gaea5a52a499338f37b62061f081d533c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
        <definition>const SephoneCallParams* sephone_call_get_remote_params</definition>
        <argsstring>(SephoneCall *call)</argsstring>
        <name>sephone_call_get_remote_params</name>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns call parameters proposed by remote.</para><para>This is useful when receiving an incoming call, to know whether the remote party supports video, encryption or whatever. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1662" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1662" bodyend="1695"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga66cefc222900f62e99760c645cd3c981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="group__sephone__address_1ga55f07568eee2ed418e36ed9781cf2e23" kindref="member">SephoneAddress</ref> *</type>
        <definition>const SephoneAddress* sephone_call_get_remote_address</definition>
        <argsstring>(const SephoneCall *call)</argsstring>
        <name>sephone_call_get_remote_address</name>
        <param>
          <type>const <ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the remote address associated to this call </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1701" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1701" bodyend="1703"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gaf2510ee219d96ab8c195c913f1ad7d71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* sephone_call_get_remote_address_as_string</definition>
        <argsstring>(const SephoneCall *call)</argsstring>
        <name>sephone_call_get_remote_address_as_string</name>
        <param>
          <type>const <ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the remote address associated to this call as a string.</para><para>The result string must be freed by user using ms_free(). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1710" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1710" bodyend="1712"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gaac1aaba397249d9694e4b0479821408a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__call__control_1ga28a2545c7d1d828763bd648e023f9777" kindref="member">SephoneCallState</ref></type>
        <definition>SephoneCallState sephone_call_get_state</definition>
        <argsstring>(const SephoneCall *call)</argsstring>
        <name>sephone_call_get_state</name>
        <param>
          <type>const <ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves the call&apos;s current state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1717" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1717" bodyend="1719"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga05a9a4af07d6eb0d4c2f5467df42557c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__misc_1ga68a1eac99c3622808ca47ec379951ff0" kindref="member">SephoneReason</ref></type>
        <definition>SephoneReason sephone_call_get_reason</definition>
        <argsstring>(const SephoneCall *call)</argsstring>
        <name>sephone_call_get_reason</name>
        <param>
          <type>const <ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the reason for a call termination (either error or normal termination) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1724" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1724" bodyend="1726"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga6eecdf1838abb2e204512e5c54eb2a56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="group__misc_1ga5b61cd0e899fd19430169cb6247b81da" kindref="member">SephoneErrorInfo</ref> *</type>
        <definition>const SephoneErrorInfo* sephone_call_get_error_info</definition>
        <argsstring>(const SephoneCall *call)</argsstring>
        <name>sephone_call_get_error_info</name>
        <param>
          <type>const <ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns full details about call errors or termination reasons. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1731" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1731" bodyend="1735"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gada54acb7429f17afed544dc14d740202" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * sephone_call_get_user_data</definition>
        <argsstring>(const SephoneCall *call)</argsstring>
        <name>sephone_call_get_user_data</name>
        <param>
          <type>const <ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the user pointer associated with the SephoneCall</para><para><simplesect kind="return"><para>an opaque user pointer that can be retrieved at any time</para></simplesect>
Retrieve the user pointer associated with the call. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">call</parametername>
</parameternamelist>
<parameterdescription>
<para>The call. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The user pointer associated with the call. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1743" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1743" bodyend="1746"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga38326923bc80ba8fb0403b3b00dd105a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_call_set_user_data</definition>
        <argsstring>(SephoneCall *call, void *user_pointer)</argsstring>
        <name>sephone_call_set_user_data</name>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_pointer</declname>
          <defname>ud</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the user pointer associated with the SephoneCall</para><para>the user pointer is an opaque user pointer that can be retrieved at any time in the SephoneCall</para><para>Assign a user pointer to the call. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>The call. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ud</parametername>
</parameternamelist>
<parameterdescription>
<para>The user pointer to associate with the call. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1755" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1755" bodyend="1758"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga6ebbc0a3f76e768276a693bf759a9c4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__call__logs_1ga971dacd835550830e6ced30185f11c46" kindref="member">SephoneCallLog</ref> *</type>
        <definition>SephoneCallLog* sephone_call_get_call_log</definition>
        <argsstring>(const SephoneCall *call)</argsstring>
        <name>sephone_call_get_call_log</name>
        <param>
          <type>const <ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the call log associated to this call. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1763" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1763" bodyend="1765"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga318b87ed813b31f7559e07837b202f83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sephone_call_get_refer_to</definition>
        <argsstring>(const SephoneCall *call)</argsstring>
        <name>sephone_call_get_refer_to</name>
        <param>
          <type>const <ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the refer-to uri (if the call was transfered). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1770" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1770" bodyend="1772"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga3c2b196bf068e3dbd90a19e8a43ba3b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
        <definition>SephoneCall* sephone_call_get_transferer_call</definition>
        <argsstring>(const SephoneCall *call)</argsstring>
        <name>sephone_call_get_transferer_call</name>
        <param>
          <type>const <ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the transferer if this call was started automatically as a result of an incoming transfer request. The call in which the transfer request was received is returned in this case. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1778" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1778" bodyend="1780"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga877535080193a1f3645075acf93ad579" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
        <definition>SephoneCall* sephone_call_get_transfer_target_call</definition>
        <argsstring>(const SephoneCall *call)</argsstring>
        <name>sephone_call_get_transfer_target_call</name>
        <param>
          <type>const <ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When this call has received a transfer request, returns the new call that was automatically created as a result of the transfer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1785" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1785" bodyend="1787"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga84b90d3b5f2d7d3a8ef31475d4ab266e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__call__logs_1ga4159f13b5c527bfc44d62e37d5ac3959" kindref="member">SephoneCallDir</ref></type>
        <definition>SephoneCallDir sephone_call_get_dir</definition>
        <argsstring>(const SephoneCall *call)</argsstring>
        <name>sephone_call_get_dir</name>
        <param>
          <type>const <ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns direction of the call (incoming or outgoing). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1792" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1792" bodyend="1794"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga8af0365acbad2ebec8ba21e0aefd9cbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sephone_call_get_remote_user_agent</definition>
        <argsstring>(SephoneCall *call)</argsstring>
        <name>sephone_call_get_remote_user_agent</name>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the far end&apos;s user agent description string, if available. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1799" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1799" bodyend="1804"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gafb536f72a9e414b0856521d19e2a8f31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sephone_call_get_remote_contact</definition>
        <argsstring>(SephoneCall *call)</argsstring>
        <name>sephone_call_get_remote_contact</name>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the far end&apos;s sip contact as a string, if available. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1809" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1809" bodyend="1818"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga31dcbe25e78d99e2c54b6eafca0afebc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t sephone_call_has_transfer_pending</definition>
        <argsstring>(const SephoneCall *call)</argsstring>
        <name>sephone_call_has_transfer_pending</name>
        <param>
          <type>const <ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if this calls has received a transfer that has not been executed yet. Pending transfers are executed when this call is being paused or closed, locally or by remote endpoint. If the call is already paused while receiving the transfer request, the transfer immediately occurs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1829" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1829" bodyend="1831"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga9fe28bbe62f3a7bab33b500d5171e343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_call_get_duration</definition>
        <argsstring>(const SephoneCall *call)</argsstring>
        <name>sephone_call_get_duration</name>
        <param>
          <type>const <ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns call&apos;s duration in seconds. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1836" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1836" bodyend="1839"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga2b5ec62f4275d908d7e789d97e4aa11e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
        <definition>SephoneCall* sephone_call_get_replaced_call</definition>
        <argsstring>(SephoneCall *call)</argsstring>
        <name>sephone_call_get_replaced_call</name>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the call object this call is replacing, if any. Call replacement can occur during call transfers. By default, the core automatically terminates the replaced call and accept the new one. This function allows the application to know whether a new incoming call is a one that replaces another one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1847" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1847" bodyend="1853"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga089f70019e298e9d2e64946d3fec53ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_call_enable_camera</definition>
        <argsstring>(SephoneCall *call, bool_t enable)</argsstring>
        <name>sephone_call_enable_camera</name>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <param>
          <type>bool_t</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indicate whether camera input should be sent to remote end. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1858" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1858" bodyend="1872"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga9aee48c0a7d7c5212f9bcc4f42594340" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_call_send_vfu_request</definition>
        <argsstring>(SephoneCall *call)</argsstring>
        <name>sephone_call_send_vfu_request</name>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request remote side to send us a Video Fast Update. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1877" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1877" bodyend="1890"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga411c9519d37f35171e3db9a19a28b7df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_call_take_video_snapshot</definition>
        <argsstring>(SephoneCall *call, const char *file)</argsstring>
        <name>sephone_call_take_video_snapshot</name>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Take a photo of currently received video and write it into a jpeg file. Note that the snapshot is asynchronous, an application shall not assume that the file is created when the function returns. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>call</parametername>
</parameternamelist>
<parameterdescription>
<para>a SephoneCall </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>a path where to write the jpeg content. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successfull, -1 otherwise (typically if jpeg format is not supported). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1900" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1900" bodyend="1908"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga7343e80448f9d7f576dd4bb6c7c1b70e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_call_take_preview_snapshot</definition>
        <argsstring>(SephoneCall *call, const char *file)</argsstring>
        <name>sephone_call_take_preview_snapshot</name>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Take a photo of currently captured video and write it into a jpeg file. Note that the snapshot is asynchronous, an application shall not assume that the file is created when the function returns. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>call</parametername>
</parameternamelist>
<parameterdescription>
<para>a SephoneCall </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>a path where to write the jpeg content. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successfull, -1 otherwise (typically if jpeg format is not supported). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1917" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1917" bodyend="1926"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gaca73b03ea492af18f18bdfd1c9d32c9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t sephone_call_camera_enabled</definition>
        <argsstring>(const SephoneCall *call)</argsstring>
        <name>sephone_call_camera_enabled</name>
        <param>
          <type>const <ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns TRUE if camera pictures are allowed to be sent to the remote party. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1931" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1931" bodyend="1933"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga3f960bc57f08e85f611ccf4c9f232de5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* sephone_privacy_to_string</definition>
        <argsstring>(SephonePrivacy privacy)</argsstring>
        <name>sephone_privacy_to_string</name>
        <param>
          <type><ref refid="group__call__control_1ga130b3ffd1280230f30735e4ffc218706" kindref="member">SephonePrivacy</ref></type>
          <declname>privacy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string value of SephonePrivacy enum </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" line="1940" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="1940" bodyend="1951"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gaeb30ce2d92edcbcdbc42e3c61a7b7240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__sephone__address_1ga55f07568eee2ed418e36ed9781cf2e23" kindref="member">SephoneAddress</ref> *</type>
        <definition>SephoneAddress* sephone_core_interpret_url</definition>
        <argsstring>(SephoneCore *lc, const char *url)</argsstring>
        <name>sephone_core_interpret_url</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>url</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Interpret a call destination as supplied by the user, and returns a fully qualified SephoneAddress.</para><para>A sip address should look like DisplayName &lt;sip:username@domain:port&gt; . Basically this function performs the following tasks<itemizedlist>
<listitem><para>if a phone number is entered, prepend country prefix of the default proxy configuration, eventually escape the &apos;+&apos; by 00.</para></listitem><listitem><para>if no domain part is supplied, append the domain name of the default proxy</para></listitem><listitem><para>if no sip: is present, prepend it</para></listitem></itemizedlist>
</para><para>The result is a syntaxically correct SIP address. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="2767" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="2767" bodyend="2823"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gae05e0732b1f7e47b08570d1fe0f3137c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
        <definition>SephoneCall* sephone_core_invite</definition>
        <argsstring>(SephoneCore *lc, const char *url)</argsstring>
        <name>sephone_core_invite</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>url</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initiates an outgoing call</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lc</parametername>
</parameternamelist>
<parameterdescription>
<para>the SephoneCore object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>the destination of the call (sip address, or phone number).</para></parameterdescription>
</parameteritem>
</parameterlist>
The application doesn&apos;t own a reference to the returned SephoneCall object. Use <ref refid="group__call__control_1gaeb7203d1f76af26a8ebb341d22ef2cb6" kindref="member">sephone_call_ref()</ref> to safely keep the SephoneCall pointer valid within your application.</para><para><simplesect kind="return"><para>a SephoneCall object or NULL in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="3097" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="3097" bodyend="3105"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gaf784087819d82f859f3385cf26caf2c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
        <definition>SephoneCall* sephone_core_invite_with_params</definition>
        <argsstring>(SephoneCore *lc, const char *url, const SephoneCallParams *p)</argsstring>
        <name>sephone_core_invite_with_params</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>url</declname>
        </param>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initiates an outgoing call according to supplied call parameters</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lc</parametername>
</parameternamelist>
<parameterdescription>
<para>the SephoneCore object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>url</parametername>
</parameternamelist>
<parameterdescription>
<para>the destination of the call (sip address, or phone number). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>call parameters</para></parameterdescription>
</parameteritem>
</parameterlist>
The application doesn&apos;t own a reference to the returned SephoneCall object. Use <ref refid="group__call__control_1gaeb7203d1f76af26a8ebb341d22ef2cb6" kindref="member">sephone_call_ref()</ref> to safely keep the SephoneCall pointer valid within your application.</para><para><simplesect kind="return"><para>a SephoneCall object or NULL in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="3121" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="3121" bodyend="3131"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga29ba28be316305aec894fd0fb42e732f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
        <definition>SephoneCall* sephone_core_invite_address</definition>
        <argsstring>(SephoneCore *lc, const SephoneAddress *addr)</argsstring>
        <name>sephone_core_invite_address</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type>const <ref refid="group__sephone__address_1ga55f07568eee2ed418e36ed9781cf2e23" kindref="member">SephoneAddress</ref> *</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initiates an outgoing call given a destination SephoneAddress</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lc</parametername>
</parameternamelist>
<parameterdescription>
<para>the SephoneCore object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>the destination of the call (sip address).</para></parameterdescription>
</parameteritem>
</parameterlist>
The SephoneAddress can be constructed directly using <ref refid="group__sephone__address_1ga96400e0c163c83900928f01aa13df7a6" kindref="member">sephone_address_new()</ref>, or created by <ref refid="group__call__control_1gaeb30ce2d92edcbcdbc42e3c61a7b7240" kindref="member">sephone_core_interpret_url()</ref>. The application doesn&apos;t own a reference to the returned SephoneCall object. Use <ref refid="group__call__control_1gaeb7203d1f76af26a8ebb341d22ef2cb6" kindref="member">sephone_call_ref()</ref> to safely keep the SephoneCall pointer valid within your application.</para><para><simplesect kind="return"><para>a SephoneCall object or NULL in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="3147" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="3147" bodyend="3155"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga6c4786542af629a1f26d8ba32aa85c36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
        <definition>SephoneCall* sephone_core_invite_address_with_params</definition>
        <argsstring>(SephoneCore *lc, const SephoneAddress *addr, const SephoneCallParams *params)</argsstring>
        <name>sephone_core_invite_address_with_params</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type>const <ref refid="group__sephone__address_1ga55f07568eee2ed418e36ed9781cf2e23" kindref="member">SephoneAddress</ref> *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initiates an outgoing call given a destination SephoneAddress</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lc</parametername>
</parameternamelist>
<parameterdescription>
<para>the SephoneCore object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>the destination of the call (sip address). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>call parameters</para></parameterdescription>
</parameteritem>
</parameterlist>
The SephoneAddress can be constructed directly using <ref refid="group__sephone__address_1ga96400e0c163c83900928f01aa13df7a6" kindref="member">sephone_address_new()</ref>, or created by <ref refid="group__call__control_1gaeb30ce2d92edcbcdbc42e3c61a7b7240" kindref="member">sephone_core_interpret_url()</ref>. The application doesn&apos;t own a reference to the returned SephoneCall object. Use <ref refid="group__call__control_1gaeb7203d1f76af26a8ebb341d22ef2cb6" kindref="member">sephone_call_ref()</ref> to safely keep the SephoneCall pointer valid within your application.</para><para><simplesect kind="return"><para>a SephoneCall object or NULL in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="3216" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="3216" bodyend="3301"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga304a9a398bc905749d8f63a62dca0d4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_core_transfer_call</definition>
        <argsstring>(SephoneCore *lc, SephoneCall *call, const char *url)</argsstring>
        <name>sephone_core_transfer_call</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>url</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Performs a simple call transfer to the specified destination.</para><para>The remote endpoint is expected to issue a new call to the specified destination. The current call remains active and thus can be later paused or terminated.</para><para>It is possible to follow the progress of the transfer provided that transferee sends notification about it. In this case, the transfer_state_changed callback of the <ref refid="group__initializing_1gaab8bfc64f0a23ff5cc72d623873d732a" kindref="member">SephoneCoreVTable</ref> is invoked to notify of the state of the new call at the other party. The notified states are <ref refid="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3ba575309df965824fcf53c5b7e488ab8a9" kindref="member">SephoneCallOutgoingInit</ref> , <ref refid="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3baa16b36798a522f77579879be517d5ef7" kindref="member">SephoneCallOutgoingProgress</ref>, <ref refid="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3ba61d15f7e9d1d616ac8d92f37f8924080" kindref="member">SephoneCallOutgoingRinging</ref> and <ref refid="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3ba51a6c2fb79fe61a7bade9de0d5389913" kindref="member">SephoneCallConnected</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="3314" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="3314" bodyend="3335"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga14bc153716b1f9e7bf593386c9b8521b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_core_transfer_call_to_another</definition>
        <argsstring>(SephoneCore *lc, SephoneCall *call, SephoneCall *dest)</argsstring>
        <name>sephone_core_transfer_call_to_another</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transfer a call to destination of another running call. This is used for &quot;attended transfer&quot; scenarios. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lc</parametername>
</parameternamelist>
<parameterdescription>
<para>sephone core object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>call</parametername>
</parameternamelist>
<parameterdescription>
<para>a running call you want to transfer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>a running call whose remote person will receive the transfer</para></parameterdescription>
</parameteritem>
</parameterlist>
The transfered call is supposed to be in paused state, so that it is able to accept the transfer immediately. The destination call is a call previously established to introduce the transfered person. This method will send a transfer request to the transfered person. The phone of the transfered is then expected to automatically call to the destination of the transfer. The receiver of the transfer will then automatically close the call with us (the &apos;dest&apos; call).</para><para>It is possible to follow the progress of the transfer provided that transferee sends notification about it. In this case, the transfer_state_changed callback of the <ref refid="group__initializing_1gaab8bfc64f0a23ff5cc72d623873d732a" kindref="member">SephoneCoreVTable</ref> is invoked to notify of the state of the new call at the other party. The notified states are <ref refid="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3ba575309df965824fcf53c5b7e488ab8a9" kindref="member">SephoneCallOutgoingInit</ref> , <ref refid="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3baa16b36798a522f77579879be517d5ef7" kindref="member">SephoneCallOutgoingProgress</ref>, <ref refid="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3ba61d15f7e9d1d616ac8d92f37f8924080" kindref="member">SephoneCallOutgoingRinging</ref> and <ref refid="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3ba51a6c2fb79fe61a7bade9de0d5389913" kindref="member">SephoneCallConnected</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="3355" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="3355" bodyend="3359"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gabc0e6b74b4465adada457a204c32e2a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_core_accept_early_media_with_params</definition>
        <argsstring>(SephoneCore *lc, SephoneCall *call, const SephoneCallParams *params)</argsstring>
        <name>sephone_core_accept_early_media_with_params</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When receiving an incoming, accept to start a media session as early-media. This means the call is not accepted but audio &amp; video streams can be established if the remote party supports early media. However, unlike after call acceptance, mic and camera input are not sent during early-media, though received audio &amp; video are played normally. The call can then later be fully accepted using <ref refid="group__call__control_1gad61574744c28e91f6bc4f248f0cea85e" kindref="member">sephone_core_accept_call()</ref> or <ref refid="group__call__control_1gaf5cea7f974a4bf1aa3ba4413a935faae" kindref="member">sephone_core_accept_call_with_params()</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lc</parametername>
</parameternamelist>
<parameterdescription>
<para>the sephonecore </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>call</parametername>
</parameternamelist>
<parameterdescription>
<para>the call </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the call params, can be NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, -1 otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="3453" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="3453" bodyend="3480"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga21652adb94f22fcbb58f19b5723c7f83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_core_accept_early_media</definition>
        <argsstring>(SephoneCore *lc, SephoneCall *call)</argsstring>
        <name>sephone_core_accept_early_media</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accept an early media session for an incoming call. This is identical as calling <ref refid="group__call__control_1gabc0e6b74b4465adada457a204c32e2a3" kindref="member">sephone_core_accept_early_media_with_params()</ref> with NULL call parameters. <simplesect kind="see"><para><ref refid="group__call__control_1gabc0e6b74b4465adada457a204c32e2a3" kindref="member">sephone_core_accept_early_media_with_params()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lc</parametername>
</parameternamelist>
<parameterdescription>
<para>the core </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>call</parametername>
</parameternamelist>
<parameterdescription>
<para>the incoming call </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, -1 otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="3491" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="3491" bodyend="3493"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga6faba33eef07d782cdf7bfd2c79a292a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_core_update_call</definition>
        <argsstring>(SephoneCore *lc, SephoneCall *call, const SephoneCallParams *params)</argsstring>
        <name>sephone_core_update_call</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Updates a running call according to supplied call parameters or parameters changed in the SephoneCore.</para><para>In this version this is limited to the following use cases:<itemizedlist>
<listitem><para>setting up/down the video stream according to the video parameter of the SephoneCallParams (see <ref refid="group__call__control_1ga9984ed816d3e2fb691ecd6aa5dee7b71" kindref="member">sephone_call_params_enable_video()</ref> ).</para></listitem><listitem><para>changing the size of the transmitted video after calling <ref refid="group__media__parameters_1gac8e1e946a21f0010ea976c9c19afbb82" kindref="member">sephone_core_set_preferred_video_size()</ref></para></listitem></itemizedlist>
</para><para>In case no changes are requested through the SephoneCallParams argument, then this argument can be omitted and set to NULL. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lc</parametername>
</parameternamelist>
<parameterdescription>
<para>the core </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>call</parametername>
</parameternamelist>
<parameterdescription>
<para>the call to be updated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the new call parameters to use. (may be NULL) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, -1 otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="3547" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="3547" bodyend="3622"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gaba9da821647f5e0a21f4f6a87473b903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_core_defer_call_update</definition>
        <argsstring>(SephoneCore *lc, SephoneCall *call)</argsstring>
        <name>sephone_core_defer_call_update</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When receiving a <ref refid="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3bad0ba6055a04fc211f82413ecae9672ab" kindref="member">SephoneCallUpdatedByRemote</ref> state notification, prevent SephoneCore from performing an automatic answer.</para><para>When receiving a <ref refid="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3bad0ba6055a04fc211f82413ecae9672ab" kindref="member">SephoneCallUpdatedByRemote</ref> state notification (ie an incoming reINVITE), the default behaviour of SephoneCore is defined by the &quot;defer_update_default&quot; option of the &quot;sip&quot; section of the config. If this option is 0 (the default) then the SephoneCore automatically answers the reINIVTE with call parameters unchanged. However when for example when the remote party updated the call to propose a video stream, it can be useful to prompt the user before answering. This can be achieved by calling <ref refid="group__call__control_1gaba9da821647f5e0a21f4f6a87473b903" kindref="member">sephone_core_defer_call_update()</ref> during the call state notification, to deactivate the automatic answer that would just confirm the audio but reject the video. Then, when the user responds to dialog prompt, it becomes possible to call <ref refid="group__call__control_1gafe6ff377a707fcb800895f38a13ff480" kindref="member">sephone_core_accept_call_update()</ref> to answer the reINVITE, with eventually video enabled in the SephoneCallParams argument.</para><para><simplesect kind="return"><para>0 if successful, -1 if the <ref refid="group__call__control_1gaba9da821647f5e0a21f4f6a87473b903" kindref="member">sephone_core_defer_call_update()</ref> was done outside a <ref refid="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3bad0ba6055a04fc211f82413ecae9672ab" kindref="member">SephoneCallUpdatedByRemote</ref> notification, which is illegal. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="3639" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="3639" bodyend="3646"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gafe6ff377a707fcb800895f38a13ff480" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_core_accept_call_update</definition>
        <argsstring>(SephoneCore *lc, SephoneCall *call, const SephoneCallParams *params)</argsstring>
        <name>sephone_core_accept_call_update</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accept call modifications initiated by other end.</para><para>This call may be performed in response to a <ref refid="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3bad0ba6055a04fc211f82413ecae9672ab" kindref="member">SephoneCallUpdatedByRemote</ref> state notification. When such notification arrives, the application can decide to call sephone_core_defer_update_call() so that it can have the time to prompt the user. <ref refid="group__call__control_1gaea5a52a499338f37b62061f081d533c4" kindref="member">sephone_call_get_remote_params()</ref> can be used to get information about the call parameters requested by the other party, such as whether a video stream is requested.</para><para>When the user accepts or refuse the change, <ref refid="group__call__control_1gafe6ff377a707fcb800895f38a13ff480" kindref="member">sephone_core_accept_call_update()</ref> can be done to answer to the other party. If params is NULL, then the same call parameters established before the update request will continue to be used (no change). If params is not NULL, then the update will be accepted according to the parameters passed. Typical example is when a user accepts to start video, then params should indicate that video stream should be used (see <ref refid="group__call__control_1ga9984ed816d3e2fb691ecd6aa5dee7b71" kindref="member">sephone_call_params_enable_video()</ref>). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lc</parametername>
</parameternamelist>
<parameterdescription>
<para>the sephone core object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>call</parametername>
</parameternamelist>
<parameterdescription>
<para>the SephoneCall object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>a SephoneCallParams object describing the call parameters to accept. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, -1 otherwise (actually when this function call is performed outside ot <ref refid="group__call__control_1gga02e926dd293c3054ec3b1b145d09de3bad0ba6055a04fc211f82413ecae9672ab" kindref="member">SephoneCallUpdatedByRemote</ref> state). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="3690" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="3690" bodyend="3697"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gad61574744c28e91f6bc4f248f0cea85e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_core_accept_call</definition>
        <argsstring>(SephoneCore *lc, SephoneCall *call)</argsstring>
        <name>sephone_core_accept_call</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accept an incoming call.</para><para>Basically the application is notified of incoming calls within the call_state_changed callback of the <ref refid="group__initializing_1gaab8bfc64f0a23ff5cc72d623873d732a" kindref="member">SephoneCoreVTable</ref> structure, where it will receive a SephoneCallIncoming event with the associated SephoneCall object. The application can later accept the call using this method. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lc</parametername>
</parameternamelist>
<parameterdescription>
<para>the SephoneCore object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>call</parametername>
</parameternamelist>
<parameterdescription>
<para>the SephoneCall object representing the call to be answered. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="3766" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="3766" bodyend="3768"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gaf5cea7f974a4bf1aa3ba4413a935faae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_core_accept_call_with_params</definition>
        <argsstring>(SephoneCore *lc, SephoneCall *call, const SephoneCallParams *params)</argsstring>
        <name>sephone_core_accept_call_with_params</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <param>
          <type>const <ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Accept an incoming call, with parameters.</para><para>Basically the application is notified of incoming calls within the call_state_changed callback of the <ref refid="group__initializing_1gaab8bfc64f0a23ff5cc72d623873d732a" kindref="member">SephoneCoreVTable</ref> structure, where it will receive a SephoneCallIncoming event with the associated SephoneCall object. The application can later accept the call using this method. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lc</parametername>
</parameternamelist>
<parameterdescription>
<para>the SephoneCore object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>call</parametername>
</parameternamelist>
<parameterdescription>
<para>the SephoneCall object representing the call to be answered. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>the specific parameters for this call, for example whether video is accepted or not. Use NULL to use default parameters. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="3784" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="3784" bodyend="3879"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gab35235f6b8c98ccf7ae74a8b74216e6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_core_terminate_call</definition>
        <argsstring>(SephoneCore *lc, SephoneCall *the_call)</argsstring>
        <name>sephone_core_terminate_call</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>the_call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Terminates a call.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lc</parametername>
</parameternamelist>
<parameterdescription>
<para>the SephoneCore </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>the_call</parametername>
</parameternamelist>
<parameterdescription>
<para>the SephoneCall object representing the call to be terminated. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="3940" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="3940" bodyend="3977"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga3ab875efa4be0ae244cc354d0033975c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_core_decline_call</definition>
        <argsstring>(SephoneCore *lc, SephoneCall *call, SephoneReason reason)</argsstring>
        <name>sephone_core_decline_call</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <param>
          <type><ref refid="group__misc_1ga68a1eac99c3622808ca47ec379951ff0" kindref="member">SephoneReason</ref></type>
          <declname>reason</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decline a pending incoming call, with a reason.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lc</parametername>
</parameternamelist>
<parameterdescription>
<para>the sephone core </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>call</parametername>
</parameternamelist>
<parameterdescription>
<para>the SephoneCall, must be in the IncomingReceived state. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reason</parametername>
</parameternamelist>
<parameterdescription>
<para>the reason for rejecting the call: SephoneReasonDeclined or SephoneReasonBusy </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="3988" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="3988" bodyend="3998"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gabf67158bf10a13185032e35ecf7e9cd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_core_terminate_all_calls</definition>
        <argsstring>(SephoneCore *lc)</argsstring>
        <name>sephone_core_terminate_all_calls</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Terminates all the calls.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lc</parametername>
</parameternamelist>
<parameterdescription>
<para>The SephoneCore </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="4006" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="4006" bodyend="4014"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga540ca7a4175eaedda0b1d39b037d76c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const MSList *</type>
        <definition>const MSList* sephone_core_get_calls</definition>
        <argsstring>(SephoneCore *lc)</argsstring>
        <name>sephone_core_get_calls</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the current list of calls. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lc</parametername>
</parameternamelist>
<parameterdescription>
<para>The SephoneCore object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A list of <ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> objects. <mslist>SephoneCall</mslist> </para></simplesect>
Note that this list is read-only and might be changed by the core after a function call to <ref refid="group__initializing_1gaa650e847d1583a8cfd8c7f9cacd25190" kindref="member">sephone_core_iterate()</ref>. Similarly the SephoneCall objects inside it might be destroyed without prior notice. To hold references to SephoneCall object into your program, you must use <ref refid="group__call__control_1gaeb7203d1f76af26a8ebb341d22ef2cb6" kindref="member">sephone_call_ref()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="4027" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="4027" bodyend="4030"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gad5dc80438983f795ac90571f24238002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t sephone_core_in_call</definition>
        <argsstring>(const SephoneCore *lc)</argsstring>
        <name>sephone_core_in_call</name>
        <param>
          <type>const <ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns TRUE if there is a call running. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="4037" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="4037" bodyend="4039"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga5ad83841292c03b00ff37037ad415498" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
        <definition>SephoneCall* sephone_core_get_current_call</definition>
        <argsstring>(const SephoneCore *lc)</argsstring>
        <name>sephone_core_get_current_call</name>
        <param>
          <type>const <ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns The _SephoneCall struct of the current call if one is in call </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="4046" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="4046" bodyend="4048"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga29c668b5b571b7d3ee5450fed87cf806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_core_pause_call</definition>
        <argsstring>(SephoneCore *lc, SephoneCall *call)</argsstring>
        <name>sephone_core_pause_call</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pauses the call. If a music file has been setup using <ref refid="group__media__parameters_1ga06e3124e76c2ed3f956411eede6f0cbd" kindref="member">sephone_core_set_play_file()</ref>, this file will be played to the remote user. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="4056" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="4056" bodyend="4060"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga153dd28dadcb266801cf849a4fd8bd2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_core_pause_all_calls</definition>
        <argsstring>(SephoneCore *lc)</argsstring>
        <name>sephone_core_pause_all_calls</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pause all currently running calls. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="4112" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="4112" bodyend="4122"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gab5d985659441e136c27562fa85463557" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_core_resume_call</definition>
        <argsstring>(SephoneCore *lc, SephoneCall *call)</argsstring>
        <name>sephone_core_resume_call</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resumes the call. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="4148" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="4148" bodyend="4200"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga2a57c4ddc34e5b12484e801406beca19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
        <definition>SephoneCall* sephone_core_get_call_by_remote_address</definition>
        <argsstring>(SephoneCore *lc, const char *remote_address)</argsstring>
        <name>sephone_core_get_call_by_remote_address</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>remote_address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the call with the remote_address specified <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lc</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>remote_address</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the SephoneCall of the call if found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="4215" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="4215" bodyend="4221"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga4928915ae8a19006340f6a5b66badd67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_core_set_inc_timeout</definition>
        <argsstring>(SephoneCore *lc, int seconds)</argsstring>
        <name>sephone_core_set_inc_timeout</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the incoming call timeout in seconds.</para><para>If an incoming call isn&apos;t answered for this timeout period, it is automatically declined. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="4241" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="4241" bodyend="4246"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga64588dc2daf12263db5f7ae34e10b8a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_core_get_inc_timeout</definition>
        <argsstring>(SephoneCore *lc)</argsstring>
        <name>sephone_core_get_inc_timeout</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the incoming call timeout</para><para>See <ref refid="group__call__control_1ga4928915ae8a19006340f6a5b66badd67" kindref="member">sephone_core_set_inc_timeout()</ref> for details. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="4254" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="4254" bodyend="4256"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga3d0a07b1a1f03568641b0056c3b9b37b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_core_set_in_call_timeout</definition>
        <argsstring>(SephoneCore *lc, int seconds)</argsstring>
        <name>sephone_core_set_in_call_timeout</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the in call timeout in seconds.</para><para>After this timeout period, the call is automatically hangup. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="4264" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="4264" bodyend="4269"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga0ad50e8b26a1843d77de9f6f710ddaa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_core_get_in_call_timeout</definition>
        <argsstring>(SephoneCore *lc)</argsstring>
        <name>sephone_core_get_in_call_timeout</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the in call timeout</para><para>See <ref refid="group__call__control_1ga3d0a07b1a1f03568641b0056c3b9b37b" kindref="member">sephone_core_set_in_call_timeout()</ref> for details. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="4277" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="4277" bodyend="4279"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga48f60027b996c2c21ed8cf96d1b62855" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_core_get_delayed_timeout</definition>
        <argsstring>(SephoneCore *lc)</argsstring>
        <name>sephone_core_get_delayed_timeout</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the delayed timeout</para><para>See <ref refid="group__call__control_1gac57097d2dc46c75a7e0661df3992a815" kindref="member">sephone_core_set_delayed_timeout()</ref> for details. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="4287" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="4287" bodyend="4289"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gac57097d2dc46c75a7e0661df3992a815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sephone_core_set_delayed_timeout</definition>
        <argsstring>(SephoneCore *lc, int seconds)</argsstring>
        <name>sephone_core_set_delayed_timeout</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the in delayed timeout in seconds.</para><para>After this timeout period, a delayed call (internal call initialisation or resolution) is resumed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="4297" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="4297" bodyend="4299"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga4491524ab76c574602b0b6559eee55f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_core_get_calls_nb</definition>
        <argsstring>(const SephoneCore *lc)</argsstring>
        <name>sephone_core_get_calls_nb</name>
        <param>
          <type>const <ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of Call </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="6645" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="6645" bodyend="6647"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga04b899c0dc7472405e4469d10e59c57f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t sephone_core_can_we_add_call</definition>
        <argsstring>(SephoneCore *lc)</argsstring>
        <name>sephone_core_can_we_add_call</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if we do not have exceed the number of simultaneous call </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="6654" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="6654" bodyend="6660"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga22a3feff5c945ca9b0a28f34ccf94283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__call__control_1gaa1f74ac09492bb829b243ea1d0f356b7" kindref="member">SephoneCallParams</ref> *</type>
        <definition>SephoneCallParams* sephone_core_create_call_params</definition>
        <argsstring>(SephoneCore *lc, SephoneCall *call)</argsstring>
        <name>sephone_core_create_call_params</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a SephoneCallParams suitable for <ref refid="group__call__control_1gaf784087819d82f859f3385cf26caf2c9" kindref="member">sephone_core_invite_with_params()</ref>, <ref refid="group__call__control_1gaf5cea7f974a4bf1aa3ba4413a935faae" kindref="member">sephone_core_accept_call_with_params()</ref>, <ref refid="group__call__control_1gabc0e6b74b4465adada457a204c32e2a3" kindref="member">sephone_core_accept_early_media_with_params()</ref>, <ref refid="group__call__control_1gafe6ff377a707fcb800895f38a13ff480" kindref="member">sephone_core_accept_call_update()</ref>. The parameters are initialized according to the current SephoneCore configuration and the current state of the SephoneCall. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lc</parametername>
</parameternamelist>
<parameterdescription>
<para>the SephoneCore </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>call</parametername>
</parameternamelist>
<parameterdescription>
<para>the call for which the parameters are to be build, or NULL in the case where the parameters are to be used for a new outgoing call. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new SephoneCallParams </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="6795" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="6795" bodyend="6798"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga71741959c707c5681cb2dde655778ffe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t sephone_core_sound_resources_locked</definition>
        <argsstring>(SephoneCore *lc)</argsstring>
        <name>sephone_core_sound_resources_locked</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if a call will need the sound resources.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lc</parametername>
</parameternamelist>
<parameterdescription>
<para>The SephoneCore </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" line="7010" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="7010" bodyend="7030"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga43cafe9f8f58dc1e3552762d2879e6c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
        <definition>SephoneCore* sephone_call_get_core</definition>
        <argsstring>(const SephoneCall *call)</argsstring>
        <name>sephone_call_get_core</name>
        <param>
          <type>const <ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the core that has created the specified call. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">call</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCall object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The SephoneCore object that has created the specified call. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.h" line="692" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gad51326dfd03306be24c0b7d2273149e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="group__sephone__address_1ga55f07568eee2ed418e36ed9781cf2e23" kindref="member">SephoneAddress</ref> *</type>
        <definition>const SephoneAddress* sephone_core_get_current_call_remote_address</definition>
        <argsstring>(SephoneCore *lc)</argsstring>
        <name>sephone_core_get_current_call_remote_address</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the remote address of the current call. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lc</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCore object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The remote address of the current call or NULL if there is no current call. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.h" line="703" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="151" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gae5b397daf3c42da3d67b41111cb17d7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t sephone_call_is_in_conference</definition>
        <argsstring>(const SephoneCall *call)</argsstring>
        <name>sephone_call_is_in_conference</name>
        <param>
          <type>const <ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return TRUE if this call is currently part of a conference <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>call</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if part of a conference.</para></simplesect>
<xrefsect id="deprecated_1_deprecated000038"><xreftitle>Deprecated</xreftitle><xrefdescription></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.h" line="797" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecall.c" bodystart="4193" bodyend="4195"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1ga30188d23f125db495a94d02de97a82af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool_t</type>
        <definition>bool_t sephone_core_is_incoming_invite_pending</definition>
        <argsstring>(SephoneCore *lc)</argsstring>
        <name>sephone_core_is_incoming_invite_pending</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tells whether there is an incoming invite pending.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lc</parametername>
</parameternamelist>
<parameterdescription>
<para>SephoneCore object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean telling whether an incoming invite is pending or not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.h" line="2195" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="3361" bodyend="3370"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gade23cbcc10acbd3bc4f0188e4adc490c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sephone_core_redirect_call</definition>
        <argsstring>(SephoneCore *lc, SephoneCall *call, const char *redirect_uri)</argsstring>
        <name>sephone_core_redirect_call</name>
        <param>
          <type><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
          <declname>call</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>redirect_uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Redirect the specified call to the given redirect URI. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lc</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">call</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> to redirect. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">redirect_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The URI to redirect the call to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, -1 on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.h" line="2219" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="3919" bodyend="3930"/>
      </memberdef>
      <memberdef kind="function" id="group__call__control_1gab0e436cfd85ea2bd6fa0650dc5ed43ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__call__control_1gac08107239d1cb38f1d07e515a1d9f98a" kindref="member">SephoneCall</ref> *</type>
        <definition>SephoneCall* sephone_core_find_call_from_uri</definition>
        <argsstring>(const SephoneCore *lc, const char *uri)</argsstring>
        <name>sephone_core_find_call_from_uri</name>
        <param>
          <type>const <ref refid="group__initializing_1ga1c39f5ce369d188892c11e63b93d66ca" kindref="member">SephoneCore</ref> *</type>
          <declname>lc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Search from the list of current calls if a remote address match uri</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lc</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>which should match call remote uri </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>SephoneCall or NULL is no match is found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.h" line="3194" column="1" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/sephonecore.c" bodystart="6980" bodyend="7001"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__call__control_1ga594bbea8c96c5719e071d5f319736756" prot="public" static="no">
        <name>sephone_call_params_local_conference_mode</name>
        <initializer><ref refid="group__call__control_1gae0f027489e7fc7e2af003100d6a109f5" kindref="member">sephone_call_params_get_local_conference_mode</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000008"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="group__call__control_1gae0f027489e7fc7e2af003100d6a109f5" kindref="member">sephone_call_params_get_local_conference_mode()</ref> instead. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" line="330" column="9" bodyfile="/users/andrew/workspaces/linphone/submodules/sephone/coreapi/call_params.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The #LinphoneCall object represents an incoming or outgoing call managed by the #LinphoneCore. Outgoing calls can be created using linphone_core_invite() or linphone_core_invite_address(), while incoming calls are notified to the application through the LinphoneCoreVTable::call_state_changed callback.</para><para>See the basic call <ref refid="group__basic__call__tutorials" kindref="compound">tutorial</ref>. </para>    </detaileddescription>
  </compounddef>
</doxygen>
